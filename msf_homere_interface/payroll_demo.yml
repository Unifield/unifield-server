-
  Employee 1
-
  !record {model: hr.employee, id: employee_1}:
    name: MM
    active: 1
    employee_type: local
    identification_id: TEMPO-01
-
  Employee 2
-
  !record {model: hr.employee, id: employee_2}:
    name: OD
    active: 1
    employee_type: local
    identification_id: TEMPO-08
-
  Employee 3
-
  !record {model: hr.employee, id: employee_3}:
    name: John DOE
    active: 1
    employee_type: ex
    identification_id: MSF-0589
-
  Payroll Entries
-
  !python {model: hr.payroll.msf}: |
    payrolls_ids = self.search(cr, uid, [])
    self.unlink(cr, uid, payrolls_ids)
    from time import strftime
    current_date = strftime('%Y-%m-%d')
    period_ids = self.pool.get('account.period').get_period_from_date(cr, uid, current_date, {})
    if period_ids:
        period_id = period_ids[0]
        # Entry 1
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.6200"),
            'employee_id': ref('employee_1'),
            'employee_id_number': 'TEMPO-01',
            'name': 'MM' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': 1000,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
        }
        self.create(cr, uid, vals)
        # Entry 2
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.6200"),
            'employee_id': ref('employee_2'),
            'employee_id_number': 'TEMPO-08',
            'name': 'OD' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': 800,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
        }
        self.create(cr, uid, vals)
        # Entry 3
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.4209"),
            'employee_id_number': 'Salaries',
            'name': 'Salaries' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': -1800,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
        }
        self.create(cr, uid, vals)
        # Valid Entry 1
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.6200"),
            'employee_id': ref('employee_1'),
            'employee_id_number': 'TEMPO-01',
            'name': 'MM' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': 1000,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
            'state': 'valid',
        }
        self.create(cr, uid, vals)
        # Valid Entry 2
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.6200"),
            'employee_id': ref('employee_2'),
            'employee_id_number': 'TEMPO-08',
            'name': 'OD' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': 800,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
            'state': 'valid',
        }
        self.create(cr, uid, vals)
        # Valid Entry 3
        vals = {
            'period_id': period_id,
            'account_id': ref("msf_chart_of_account.4209"),
            'employee_id_number': 'Salaries',
            'name': 'Salaries' + ' ' + self.pool.get('account.period').browse(cr, uid, period_id).name,
            'ref': 'staff position',
            'amount': -1800,
            'currency_id': self.pool.get('res.company').browse(cr, uid, uid).currency_id.id,
            'state': 'valid',
        }
        self.create(cr, uid, vals)
