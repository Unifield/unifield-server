from osv import osv, fields

class UpdateReceived(osv.osv):
    _inherit = 'sync.client.update_received'
    _name = 'sync_remote_warehouse.update_received'
    _columns = {
        # The date that the user started the synchronisation process (Not the log record's create date). Allows us to group logs into sync "batches" 
        'batch_create_date': fields.datetime('Sync Start Date / Time', help='The date and time the synchronisation that created this record was started', readonly=True),
        
        # determines if this log was generated by a usb synchronisation, i.e. between a CP and RW
        'usb': fields.boolean('CP <--> RW Sync', help='Was this synchronisation usb, i.e. between a remote warehouse and a central platform?', readonly=True),
    } 

UpdateReceived()

class UpdateToSend(osv.osv):
    _inherit = 'sync.client.update_to_send'
    _name = 'sync_remote_warehouse.update_to_send'
    _columns = {
        'batch_create_date': fields.datetime('Sync Start Date / Time', help='The date and time the synchronisation that created this record was started', readonly=True),
        'usb': fields.boolean('CP <--> RW Sync', help='Was this synchronisation usb, i.e. between a remote warehouse and a central platform?', readonly=True),
    }

UpdateToSend()

class MessageReceived(osv.osv):
    _inherit = 'sync.client.message_received'
    _name = 'sync_remote_warehouse.message_received'
    _columns = {
        'batch_create_date': fields.datetime('Sync Start Date / Time', help='The date and time the synchronisation that created this record was started', readonly=True),
        'usb': fields.boolean('CP <--> RW Sync', help='Was this synchronisation usb, i.e. between a remote warehouse and a central platform?', readonly=True),
    }

MessageReceived()

class MessageToSend(osv.osv):
    _inherit = 'sync.client.message_to_send'
    _name = 'sync_remote_warehouse.message_to_send'
    _columns = {
        'batch_create_date': fields.datetime('Sync Start Date / Time', help='The date and time the synchronisation that created this record was started', readonly=True),
        'usb': fields.boolean('CP <--> RW Sync', help='Was this synchronisation usb, i.e. between a remote warehouse and a central platform?', readonly=True),
    }

MessageToSend()