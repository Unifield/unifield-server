-
  I create an Expense Account Type.
-
  !record {model: account.account.type, id: account_account_type_expense0}:
    close_method: unreconciled
    code: expense
    name: Expense
    sign: 1
-
  I create a 6101 Expense Account.
-
  !record {model: account.account, id: account_account_expense0}:
    code: '6101-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense Account
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval datetime.today().strftime('%Y-01-01')
    default_destination_id: analytic_distribution.analytic_account_destination_operation
    destination_ids: [analytic_distribution.analytic_account_destination_operation, analytic_distribution.analytic_account_destination_support]
-
  I create a link between 6101 expense account and Operation destination
-
  !record {model: account.destination.link, id: tuple_operation_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a link between 6101 expense account and Support destination
-
  !record {model: account.destination.link, id: tuple_support_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create an analytic account attached to OC (Operation Center) named Gabon
-
  !record {model: account.analytic.account, id: analytic_account_gabon}:
    name: "Gabon"
    currency_id: 1
    code: GAB
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create an analytic account attached to OC (Operation Center) named Kenya
-
  !record {model: account.analytic.account, id: analytic_account_kenya}:
    name: "Kenya"
    currency_id: 1
    code: KEN
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create an FP analytic account named Gabon Hospital attached to Gabon CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_gabon_hospital}:
    name: "Gabon Hospital"
    currency_id: 1
    code: GABH
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_account_gabon]
    tuple_destination_account_ids: [tuple_operation_6101]
-
  I create an FP analytic account named Kenya AIDS attached to Kenya CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_kenya_aids}:
    name: "Kenya AIDS"
    currency_id: 1
    code: KENA
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_account_kenya]
    tuple_destination_account_ids: [tuple_support_6101]
-
  I create a global analytical distribution
-
  !record {model: analytic.distribution, id: global_distrib_1}:
    name: GLOB DISTR 1
-
  I create a cost center distribution line for gabon
-
  !record {model: cost.center.distribution.line, id: cost_center_gabon}:
    name: CC Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_gabon
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a cost center distribution line for kenya
-
  !record {model: cost.center.distribution.line, id: cost_center_kenya}:
    name: CC Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_account_kenya
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create a funding pool distribution line for gabon
-
  !record {model: funding.pool.distribution.line, id: funding_pool_gabon}:
    name: FP Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_fp_gabon_hospital
    distribution_id: global_distrib_1
    cost_center_id: analytic_account_gabon
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a funding pool distribution line for kenya
-
  !record {model: funding.pool.distribution.line, id: funding_pool_kenya}:
    name: FP Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_account_fp_kenya_aids
    cost_center_id: analytic_account_kenya
    destination_id: analytic_distribution.analytic_account_destination_support
    distribution_id: global_distrib_1
-
  I create a fiscalyear
-
  !record {model: account.fiscalyear, id: fiscalyear0}:
    code: !eval "'FY%s'% (datetime.now().year+10)"
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year+10)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year+10)"
    name: !eval "'Fiscal Year %s' %(datetime.now().year+10)"
-
  I create the period 1
-
  !record {model: account.period, id: period1}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval (DateTime.now()+DateTime.RelativeDateTime(day=-1,years=10)).strftime('%Y-%m-%d')
    fiscalyear_id: fiscalyear0
    name: JAN-HHHHH-OP
    special: 1
-
  I create a Receivable Account Type.
-
  !record {model: account.account.type, id: account_account_type_receivable0}:
    close_method: balance
    code: receivable
    name: Receivable
    sign: 1
-
  I create an Expenses Journal.
-
  !record {model: account.journal, id: account_journal_expenses_0}:
    code: expense
    company_id: base.main_company
    name: Expenses Journal (test)
    type: purchase
    allow_date: 0
-
  I create Supplier 401 Payable Account.
-
  !record {model: account.account, id: account_account_payable_supplier0}:
    code: '401-supplier-test'
    company_id: base.main_company
    currency_mode: current
    name: Supplier Payable Account
    type: payable
    user_type: account_account_type_receivable0
    reconcile: 1
    type_for_register: none
    activation_date: !eval time.strftime('%Y-01-01')
