-
  In order to test the account module, I start by creating a new account as inactive
  I create Asset Account Type.
-
  !record {model: account.account.type, id: account_account_type_asset0}:
    close_method: balance
    code: asset
    name: Asset
    sign: 1

-
  I create the account
-
  !record {model: account.account, id: account_1}:
    name: "Test Account"
    code: "TEST"
    type: payable
    user_type: account_account_type_asset0
    inactivation_date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    
-
  I check that the activation date is today
-
  !assert {model: account.account, id: account_1}:
    - activation_date == str(datetime.now().strftime('%Y-%m-%d'))

-
  I create an analytical journal, ...
-
  !record {model: account.analytic.journal, id: analytic_journal_1}:
    code: CANJ
    name: Cash Analytic Journal
    type: general
-
  ...a journal, ...
-
  !record {model: account.journal, id: account_journal_1}:
    name: Cash Journal
    code: CTST
    currency: base.CHF
    type: cash
    analytic_journal_id: analytic_journal_1
-
  ...a fiscal year, ...
-
  !record {model: account.fiscalyear, id: account_fiscalyear_fiscalyear0}:
    code: !eval "'FY%s'% (datetime.now().year + 1)"
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year + 1)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year + 1)"
    name: !eval "'Fiscal Year %s' %(datetime.now().year + 1)"
-
  ... and a period.
-
  !record {model: account.period, id: account_period_0}:
    company_id: base.main_company
    date_start: !eval "'%s-03-01' %(datetime.now().year + 1,)"
    date_stop: !eval "'%s-03-31' %(datetime.now().year + 1)"
    fiscalyear_id: account_fiscalyear_fiscalyear0
    name: !eval "'Mar %s' %(datetime.now().year + 1)"
    special: 1
    state: draft
-
  I create an account move line with all of this.
-
  !record {model: account.move.line, id: move_line_test}:
    name: testline
    journal_id: account_journal_1
    period_id: account_period_0
    account_id: account_1
    currency_id: base.CHF
    date: !eval "'%s-03-12' %(datetime.now().year + 1)"
    
-
  I change the inactivation date to today (forbidden)
-
  !python {model: account.account}: |
    import datetime
    try:
      self.write(cr, uid, ref('account_1'), vals={'inactivation_date': datetime.datetime.now().strftime('%Y-%m-%d')})
    except:
      pass
      
     
-
  I change the dates so that activation_date > inactivation_date (forbidden)
-
  !python {model: account.account}: |
    import datetime
    try:
      self.write(cr, uid, ref('account_1'), vals={'activation_date': '%s-03-12' %(datetime.datetime.now().year + 1), 'inactivation_date': '%s-03-01' %(datetime.datetime.now().year + 1)})
    except:
      pass
      
     
-
  I change the move line date so that it is outside the account's activity period (forbidden)
-
  !python {model: account.move.line}: |
    import datetime
    try:
      self.write(cr, uid, ref('move_line_test'), vals={'date': '%s-03-01' %(datetime.datetime.now().year + 2)})
    except:
      pass