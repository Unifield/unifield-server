<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>ERP Comparator Palnet</title>
	<link>http://www.evaluationmatrix.com/</link>
	<language>en</language>
	<description>ERP Comparator Palnet - http://www.evaluationmatrix.com/</description>

<item>
	<title>Jeff Waugh: Music is better with robots</title>
	<guid>http://bethesignal.org/?p=1400</guid>
	<link>http://bethesignal.org/blog/2009/01/31/music-is-better-with-robots/</link>
	<description>&lt;a href=&quot;http://bethesignal.org/blog/2009/01/31/music-is-better-with-robots/&quot;&gt;&lt;em&gt;Click here to view the embedded video.&lt;/em&gt;&lt;/a&gt;</description>
	<pubDate>Fri, 30 Jan 2009 13:08:16 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: QotD: John C. Dvorak</title>
	<guid>http://bethesignal.org/?p=1392</guid>
	<link>http://bethesignal.org/blog/2009/01/13/qotd-john-c-dvorak/</link>
	<description>&lt;p&gt;If it wasn&amp;#8217;t already ludicrously obvious that John C. Dvorak is an asshat, here&amp;#8217;s a snarly, clue-free piece of evidence from 1984:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Apple makes the arrogant assumption of thinking that it knows what you want and need. It, unfortunately, leaves the “why” out of the equation — as in “why would I want this?” The Macintosh uses an experimental pointing device called a ‘mouse’. There is no evidence that people want to use these things. I dont want one of these new fangled devices.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;thinsp;&amp;#8212;&amp;thinsp;John C. Dvorak in the San Francisco Examiner on February 19th, 1984 (via Philip Elmer-DeWitt&amp;#8217;s time machine, &lt;a href=&quot;http://apple20.blogs.fortune.cnn.com/2009/01/12/jan-1984-how-critics-reviewed-the-mac/&quot;&gt;1984: How critics reviewed the Mac&lt;/a&gt;)&lt;/p&gt;</description>
	<pubDate>Tue, 13 Jan 2009 02:11:51 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: More mainstream media love for OpenAustralia</title>
	<guid>http://bethesignal.org/?p=1389</guid>
	<link>http://bethesignal.org/blog/2008/12/20/more-mainstream-media-love-for-openaustralia/</link>
	<description>&lt;p&gt;Totally awesome to see Matthew Moore covering &lt;a href=&quot;http://www.openaustralia.org/&quot;&gt;OpenAustralia&lt;/a&gt;&amp;#8217;s efforts to bring the register of members&amp;#8217; interests to the web:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Given the fortunes spent in the nation&amp;#8217;s Parliament, and Kevin Rudd&amp;#8217;s professed desired for more transparency in government, it seems absurd that volunteers are left to do the job any self-respecting parliament would have done long ago.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;via &lt;a href=&quot;http://www.smh.com.au/news/opinion/interests-of-mps-to-go-online--its-about-time/2008/12/19/1229189883754.html&quot;&gt;Interests of MPs to go online - it&amp;#8217;s about time&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sat, 20 Dec 2008 00:15:55 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: Spy photos reveal linux.conf.au 2009 gene therapy feat</title>
	<guid>http://bethesignal.org/?p=1375</guid>
	<link>http://bethesignal.org/blog/2008/12/11/spy-photos-reveal-linuxconfau-2009-gene-therapy-feat/</link>
	<description>&lt;p&gt;&lt;a href=&quot;http://linux.conf.au/&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1376&quot; title=&quot;Tuz&quot; src=&quot;http://bethesignal.org/wp-content/uploads/2008/12/tuzrpf.jpg&quot; alt=&quot;Tuz&quot; width=&quot;375&quot; height=&quot;500&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Holy crap, the little devil has escaped! There could only be one explanation&amp;#8230; it must be using some kind of photon-traversing, CCD-infecting, executable, self-modifying JPEG trojan code. &lt;em&gt;We must find it, save the cheerleader, and save humanity&amp;#8230;&lt;/em&gt; Help us save the day at &lt;a href=&quot;http://linux.conf.au/&quot;&gt;linux.conf.au 2009&lt;/a&gt;!&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2008 10:18:36 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: WordPress 2.7 released!</title>
	<guid>http://bethesignal.org/?p=1368</guid>
	<link>http://bethesignal.org/blog/2008/12/11/wordpress-27-released/</link>
	<description>&lt;p&gt;&lt;a href=&quot;http://wordpress.org/development/2008/12/coltrane/&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1367&quot; title=&quot;WordPress 2.7&quot; src=&quot;http://bethesignal.org/wp-content/uploads/2008/12/wordpress-27.png&quot; alt=&quot;WordPress 2.7&quot; width=&quot;650&quot; height=&quot;126&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wordpress.org/development/2008/12/coltrane/&quot;&gt;WordPress 2.7&lt;/a&gt; is an awesome release. The revision of the admin backend, despite being so soon after the changes in 2.5, is fantastic&amp;#8230; particularly for &amp;#8220;real users&amp;#8221;. I enjoyed putting forward my blunt perspective on the issue while &lt;a href=&quot;http://ma.tt/&quot;&gt;Matt&lt;/a&gt; and &lt;a href=&quot;http://jane.wordpress.com/&quot;&gt;Jane&lt;/a&gt; were in the crowd at &lt;a href=&quot;http://wordcamp.org.au/wordcamp-australia-2008/&quot;&gt;WordCamp Australia&lt;/a&gt;. Developers and contributors don&amp;#8217;t hear &amp;#8220;you&amp;#8217;re doing the right thing&amp;#8221; and &amp;#8220;thank you&amp;#8221; often enough. &lt;img src=&quot;http://bethesignal.org/wp-content/plugins/tango-smilies/tango/face-smile.png&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt; &lt;/p&gt;
&lt;p&gt;So, &lt;em&gt;thank you&lt;/em&gt; WordPress hackers for another great release! (And thanks to Donncha for already working on the big merge for WordPress MU 2.7&amp;#8230; I&amp;#8217;m really looking forward to deploying it on &lt;a href=&quot;http://blogs.gnome.org/&quot;&gt;GNOME Blogs&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Plus, make sure you check out the &lt;em&gt;in-yo-face&lt;/em&gt; &lt;a href=&quot;http://wordpress.org/download/counter/&quot;&gt;download counter&lt;/a&gt;.&lt;/p&gt;
&lt;a href=&quot;http://flickr.com/photos/halans/3067634912/&quot;&gt;&lt;img class=&quot;size-full wp-image-1369&quot; title=&quot;Shit-hot for human beings.&quot; src=&quot;http://bethesignal.org/wp-content/uploads/2008/12/wordpress-27-shit-hot.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;</description>
	<pubDate>Thu, 11 Dec 2008 02:47:18 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: Recursive get with lftp</title>
	<guid>http://bethesignal.org/?p=1363</guid>
	<link>http://bethesignal.org/blog/2008/12/04/recursive-get-with-lftp/</link>
	<description>&lt;p&gt;If you&amp;#8217;re trying to figure out how to recursively download a directory with &lt;tt&gt;lftp&lt;/tt&gt;, the wonderful command-line FTP and SFTP client, this is what you want:&lt;/p&gt;
&lt;pre&gt;mirror &amp;lt;directory&amp;gt;&lt;/pre&gt;
&lt;p&gt;&amp;#8230; and that&amp;#8217;s that. Hopefully this will be more helpful to someone than the current Google documentation results. &lt;img src=&quot;http://bethesignal.org/wp-content/plugins/tango-smilies/tango/face-wink.png&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to &lt;a href=&quot;http://bethesignal.org/blog/2008/12/04/recursive-get-with-lftp/#comment-3670&quot;&gt;molok in the comments&lt;/a&gt;, here&amp;#8217;s how you upload recursively:&lt;/p&gt;
&lt;pre&gt;mirror -R &amp;lt;directory&amp;gt;&lt;/pre&gt;</description>
	<pubDate>Thu, 04 Dec 2008 10:57:10 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: Intriguing sessions at WordCamp Australia…</title>
	<guid>http://bethesignal.org/?p=1261</guid>
	<link>http://bethesignal.org/blog/2008/11/28/intriguing-sessions-at-wordcamp-australia/</link>
	<description>&lt;p&gt;If you&amp;#8217;re missing out on &lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/&quot;&gt;WordCamp Australia&lt;/a&gt; this weekend, you might &lt;em&gt;really&lt;/em&gt; be missing out! A bunch of sessions that will be of particular interest to WordPress fans (and fans of all things new and groovy) have snuck their way into the &lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/schedule/&quot;&gt;published schedule&lt;/a&gt;, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;dquo&quot;&gt;&amp;#8220;&lt;/span&gt;Launch: Prologue Groups&amp;#8221; at 11:05 on Saturday, from Sam Bauers and Jane Wells&lt;/li&gt;
&lt;li&gt;A &amp;#8220;Special Presentation&amp;#8221; at 13:30 on Saturday, from an undisclosed speaker&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;dquo&quot;&gt;&amp;#8220;&lt;/span&gt;Launch: Secret Product!&amp;#8221; at 10:05 on Sunday, from Alex Shiels&lt;/li&gt;
&lt;li&gt;Certain titles that may or may not suggest other project releases&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Might we see a live WordPress 2.7 release? Perhaps we&amp;#8217;ll see some of the goodies previewed in Ranaan Bar-Cohen&amp;#8217;s &lt;a href=&quot;http://www.slideshare.net/raanan/virtual-company-presentation&quot;&gt;recent &amp;#8220;Seven Tips for Virtual Collaboration&amp;#8221;&lt;/a&gt; presentation&amp;#8230; of course, you&amp;#8217;ll never-never know if you never-never go.&lt;/p&gt;
&lt;p&gt;I will be there. Wearing green. &lt;img src=&quot;http://bethesignal.org/wp-content/plugins/tango-smilies/tango/face-wink.png&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1253&quot; title=&quot;WordCamp Australia 2008&quot; src=&quot;http://bethesignal.org/wp-content/uploads/2008/11/wordcamp-australia.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;410&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bonus:&lt;/strong&gt; &lt;a href=&quot;http://blogs.crikey.com.au/&quot;&gt;Crikey Blogs&lt;/a&gt; is &lt;a href=&quot;http://wordpress.org/showcase/crikey-blogs/&quot;&gt;now featured&lt;/a&gt; on &lt;a href=&quot;http://wordpress.org/showcase/&quot;&gt;WordPress Showcase&lt;/a&gt;!&lt;/p&gt;</description>
	<pubDate>Fri, 28 Nov 2008 09:41:45 +0000</pubDate>
</item>
<item>
	<title>Edd Dumbill: Learning Rails</title>
	<guid>http://times.usefulinc.com/2008/11/21-learning-rails</guid>
	<link>http://times.usefulinc.com/2008/11/21-learning-rails</link>
	<description>&lt;p&gt;I'm pleased to announce the release of &lt;a href=&quot;http://oreilly.com/catalog/9780596518776/&quot;&gt;Learning Rails&lt;/a&gt;, and its companion web site, &lt;a href=&quot;http://excursionsonrails.com/&quot;&gt;Excursions on Rails&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://oreilly.com/catalog/9780596518776/&quot;&gt;&lt;img src=&quot;http://times.usefulinc.com/asset/name/46/9780596518776_cat.gif&quot; alt=&quot;Learning Rails cover&quot; width=&quot;180&quot; height=&quot;236&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Co-authored by &lt;a href=&quot;http://simonstl.com/&quot;&gt;Simon St.Laurent&lt;/a&gt; and myself, &lt;span&gt;Learning Rails&lt;/span&gt; is written
especially for web developers, and starts out from web design, heading inwards to the heart of a Rails app.&lt;/p&gt;
&lt;p&gt;Where most Rails books jump right in with data structures, we take a web application's interface as our starting point. If you know HTML, CSS and fancy heading deeper, this is the book for you.&lt;/p&gt;
&lt;p&gt;You can buy &lt;span&gt;Learning Rails&lt;/span&gt;&amp;nbsp;from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://oreilly.com/catalog/9780596518776/&quot;&gt;O'Reilly&lt;/a&gt; (US or UK)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.powells.com/biblio/62-9780596518776-0&quot;&gt;Powell's Books&lt;/a&gt; (US)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/dp/0596518773/&quot;&gt;Amazon&lt;/a&gt; (US)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.co.uk/dp/0596518773/&quot;&gt;Amazon&lt;/a&gt; (UK)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://search.barnesandnoble.com/Learning-Rails/e/9780596518776/&quot;&gt;Barnes &amp;amp; Noble&lt;/a&gt; (US)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.borders.com/online/store/SearchResults?title=Learning+Rails&quot;&gt;Borders&lt;/a&gt; (US)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;http://times.usefulinc.com/2008/11/21-learning-rails#disqus_thread&quot;&gt;Join the conversation about this post&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 21 Nov 2008 14:04:42 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: Eumemics</title>
	<guid>http://bethesignal.org/?p=1256</guid>
	<link>http://bethesignal.org/blog/2008/11/14/eumemics/</link>
	<description>&lt;p&gt;Somewhere out there is a person with enough gumption and perseverance to write a &lt;a href=&quot;http://intertwingly.net/code/venus/&quot;&gt;Venus&lt;/a&gt; filter that would strip Planets of idiotic memes using some kind of clever heuristic or learning system. Perhaps we can call this the immoral study of &amp;#8220;eumemics&amp;#8221;. &lt;img src=&quot;http://bethesignal.org/wp-content/plugins/tango-smilies/tango/face-smile.png&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt; &lt;/p&gt;
&lt;p&gt;Because this would just be cheating:&lt;/p&gt;
&lt;pre&gt;exclude = (the nearest book)&lt;/pre&gt;</description>
	<pubDate>Fri, 14 Nov 2008 09:50:44 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: WordCamp Australia 2008</title>
	<guid>http://bethesignal.org/?p=1252</guid>
	<link>http://bethesignal.org/blog/2008/11/10/wordcamp-australia-2008/</link>
	<description>&lt;p&gt;&lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1253&quot; title=&quot;WordCamp Australia 2008&quot; src=&quot;http://bethesignal.org/wp-content/uploads/2008/11/wordcamp-australia.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;410&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/&quot;&gt;WordCamp Australia 2008&lt;/a&gt; will be held in Sydney at the end of the month, right before &lt;a href=&quot;http://www.osdc.com.au/2008/index.html&quot;&gt;OSDC&lt;/a&gt;&amp;#8230; and I intend to celebrate my first WordCamp by giving a talk!&lt;/p&gt;
&lt;p&gt;Yes, I will dimly glow next to such &lt;a href=&quot;http://wordcamp.com.au/wordcamp-australia-2008/speakers/&quot;&gt;bright stars in the universe of WordPress&lt;/a&gt; as Matt Mullenweg and Jane Wells (who is kicking butt with the WordPress 2.7 admin redesign), as I present an &lt;em&gt;exclusive, behind-the-scenes look&lt;/em&gt; at the recently launched Australian über-blog-network, &lt;a href=&quot;http://blogs.crikey.com.au/&quot;&gt;Crikey Blogs&lt;/a&gt;. &lt;img src=&quot;http://bethesignal.org/wp-content/plugins/tango-smilies/tango/face-smile.png&quot; alt=&quot;:-)&quot; class=&quot;wp-smiley&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt; &lt;/p&gt;
&lt;p&gt;WordPress lovers and the blog-curious should come along and join the fun!&lt;/p&gt;</description>
	<pubDate>Mon, 10 Nov 2008 07:08:16 +0000</pubDate>
</item>
<item>
	<title>Jeff Waugh: Let the Wookie win</title>
	<guid>http://bethesignal.org/?p=1249</guid>
	<link>http://bethesignal.org/blog/2008/11/10/let-the-wookie-win/</link>
	<description>&lt;p&gt;This is so chock-full of incredible goodness, I simply can&amp;#8217;t comprehend how many layers of awesome there are. John Williams&lt;span class=&quot;entry-content&quot;&gt; film music + Star Wars to song + &lt;a href=&quot;http://www.moosebutter.com/lyrics.php?fromstore=1&amp;song=3&quot;&gt;choral incredibility&lt;/a&gt; + split-screen hilarity.&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;http://bethesignal.org/blog/2008/11/10/let-the-wookie-win/&quot;&gt;&lt;em&gt;Click here to view the embedded video.&lt;/em&gt;&lt;/a&gt;</description>
	<pubDate>Mon, 10 Nov 2008 03:25:32 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Upstart adoption continues</title>
	<guid>http://www.netsplit.com/?p=179</guid>
	<link>http://www.netsplit.com/2008/09/23/upstart-adoption-continues/</link>
	<description>&lt;p&gt;A complete surprise to me, from slides of today&amp;#8217;s OSiM Maemo Developer Session &lt;a href=&quot;http://www.internettablettalk.com/2008/09/18/osim-maemo-developer-session/&quot;&gt;it appears that &lt;/a&gt;Maemo (the Nokia open source Internet Tablet platform) has adopted Upstart.  Does anyone know whether they are using native jobs or still using SysV compatibility?&lt;/p&gt;</description>
	<pubDate>Tue, 23 Sep 2008 18:36:07 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Calling things by the same name</title>
	<guid>http://www.netsplit.com/?p=177</guid>
	<link>http://www.netsplit.com/2008/08/28/calling-things-by-the-same-name/</link>
	<description>&lt;p&gt;In response to my blog post &amp;#8220;&lt;a href=&quot;http://www.netsplit.com/2008/08/14/whatever-you-do-dont-fix-the-kernel/&quot;&gt;Whatever you do, don&amp;#8217;t fix the kernel!&lt;/a&gt;&amp;#8220;, David Zeuthen (prominent plumber, the maintainer of HAL and author of DeviceKit) &lt;a href=&quot;http://www.netsplit.com/2008/08/14/whatever-you-do-dont-fix-the-kernel/#comment-980&quot;&gt;wrote&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Scott, here’s why you’re wrong. It’s very simple and comes down to two points&lt;/p&gt;
&lt;p&gt;- you obviously agree we can’t break huge amounts of userspace by changing DEVPATH&lt;/p&gt;
&lt;p&gt;- having two names emitted from the kernel (_just_ because lots of user space is&lt;br /&gt;
broken) is just wrong and confusing&lt;br /&gt;
=&amp;gt; much better to fix up things in user space&lt;/p&gt;
&lt;p&gt;Besides, what’s in a freaking name _anyway_? Apps should be using stable symlinks or, gosh, a device enumeration framework like HAL or the upcoming DeviceKit.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;He makes, I think, an interesting point.&lt;/p&gt;
&lt;p&gt;Why do we have two names for devices?&lt;/p&gt;
&lt;p&gt;The kernel maintains its own namespace for devices which is based on its tree of internal objects and exported via the sysfs virtual filesystem.  My mouse&amp;#8217;s object path is &lt;code&gt;/devices/pci0000:00/0000:00:02.0/usb2/2-4/2-4:1.0/input/input2/mouse1&lt;/code&gt; (convention is to omit the &lt;code&gt;/sys&lt;/code&gt; prefix), and a class device link also exists as &lt;code&gt;/class/input/mouse1&lt;/code&gt; for easy access.&lt;/p&gt;
&lt;p&gt;Properties of the device object are exported into user space via the sysfs filesystem, at that path under its mount point, and announcements of new objects, and significant changes to or removal of existing objects are made through the uevent system.  One of those properties is details about the device node that needs to be created; the &lt;code&gt;dev&lt;/code&gt; file contains the major and minor number, and these are also present in the &lt;code&gt;MAJOR&lt;/code&gt; and &lt;code&gt;MINOR&lt;/code&gt; keys of the uevent.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;udev&lt;/code&gt; daemon listens out for these uevents and creates device nodes under the &lt;code&gt;/dev&lt;/code&gt; path for userspace to use.  These device nodes have a naming scheme that is mostly flat, with some sub-directories used for grouping.  It records both the kernel object name and device path in its database so that lookups can be performed on device removal, and queries by applications using DeviceKit.&lt;/p&gt;
&lt;p&gt;It also passes on the uevent to HAL, which stores the mapping in its own database and performs its own actions.&lt;/p&gt;
&lt;p&gt;Applications can then use DeviceKit or HAL to enumerate devices by type, or walk the tree of devices, and lookup the actual device node path from that.  They may also use them to lookup the object information for a given device node path.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s quite a lot of work going on behind the scenes already to map between two different names for a single device, all my proposal tried to do was reduce a little bit of the user-space side of that work by harmonising the names.&lt;/p&gt;
&lt;p&gt;But maybe David has a point, the real problem is that we have two names in the first place!&lt;/p&gt;
&lt;p&gt;Obviously the &lt;code&gt;/dev&lt;/code&gt; paths are necessary for the vast number of userspace applications that still require them.  But why do applications that use DeviceKit or HAL need them?&lt;/p&gt;
&lt;p&gt;If the kernel placed a device node inside the sysfs filesystem, we wouldn&amp;#8217;t need to do any path lookup, we&amp;#8217;d just append the fixed name of the node to the object name.&lt;/p&gt;
&lt;p&gt;udev would only need to make symlinks to those devices in &lt;code&gt;/dev&lt;/code&gt; for legacy applications.&lt;/p&gt;</description>
	<pubDate>Thu, 28 Aug 2008 13:55:32 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Concept Distro</title>
	<guid>http://www.netsplit.com/?p=174</guid>
	<link>http://www.netsplit.com/2008/08/18/concept-distro/</link>
	<description>&lt;p&gt;The automotive industry, with its particular emphasis on efficient workflow and practices, has had a lot to teach the software world over the years.  From the process of requirements, specification and design through to LEAN development practices, it is difficult to argue that we haven&amp;#8217;t learned anything from them.&lt;/p&gt;
&lt;p&gt;I think that there&amp;#8217;s another practice from that industry it might be fun to adopt: the Concept Car (sometimes known as a Show or Halo Car).&lt;/p&gt;
&lt;p&gt;These are cars where the designers and engineers have been allowed to let their imaginations run wild, and build something that shows off the limits of what&amp;#8217;s possible.  Often they&amp;#8217;re also used to explore new technologies or ideas without having to commit to standards of production that would be required for a marketable road car.&lt;/p&gt;
&lt;p&gt;And that&amp;#8217;s pretty much the key point about these cars, they normally build just one or two and take them around the car and motoring shows for everybody to look at and talk about.&lt;/p&gt;
&lt;p&gt;Obviously I&amp;#8217;m not suggesting that we build strange and outlandish cars, and drape them in fancy lights and scantily clad people on a slowly rotating podium; but I think the idea can translate to our world.&lt;/p&gt;
&lt;p&gt;Thus I&amp;#8217;d like to humbly introduce my idea of the Concept Distro.&lt;/p&gt;
&lt;p&gt;The Concept Distro would be an engineering project to allow developers and maintainers to let their imaginations run wild.  It&amp;#8217;d be released, probably to demonstrate at a major event, and would explicitly not be supported.  Not even basic security support, or a bug tracker, or even answering questions about why things don&amp;#8217;t work.&lt;/p&gt;
&lt;p&gt;On a Concept Car, it&amp;#8217;s entirely normal that half of the doors don&amp;#8217;t even open; likewise in the Concept Distro, it would be entirely expected that half of the icons were just placeholders and didn&amp;#8217;t do anything if you clicked on them.&lt;/p&gt;
&lt;p&gt;After release, engineering effort could be focussed either on integrating the successful technologies into Linux distributions proper, or on working on the next Concept Distro for the next big event a year or two down the line.&lt;/p&gt;
&lt;p&gt;In the early days of Ubuntu, when we had two different CDs, we had a plan to do this kind of thing with the Live CD.  Since that didn’t have an installer, it could be a little more experimental and a little more risqué.  It was a good place to try out Network Manager before we integrated it with the distribution proper, and the intent was that the naked people would have had even less clothing (I didn’t mind the loss of this, the male model they picked was not the prettiest of the options).&lt;/p&gt;
&lt;p&gt;Assuming we don’t resurrect the naked people, what kinds of things would we do with the Concept Distro?&lt;/p&gt;
&lt;p&gt;It’s a chance to make some fundamental changes without having to worry about the support or upgrade implications of them.  I’d like to see what we could do by assuming that the filesystem is a single mount of ext4 on LVM on RAID, which we grow onto additional disks as they are made available.&lt;/p&gt;
&lt;p&gt;And since we wouldn’t have to worry about partitioning, it might be interesting to look into rearranging the hierarchy.  Maybe having &lt;code&gt;/System&lt;/code&gt;, &lt;code&gt;/Software&lt;/code&gt; and &lt;code&gt;/Users&lt;/code&gt; really is better than &lt;code&gt;/bin&lt;/code&gt;, &lt;code&gt;/usr&lt;/code&gt; and &lt;code&gt;/home&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If we went down that route, we could throw out the traditional package manager and experiment with some new approaches.  What better way to upgrade the operating system than:&lt;/p&gt;
&lt;pre&gt;cd /System
bzr update&lt;/pre&gt;
&lt;p&gt;or switch to a new version with &lt;code&gt;bzr switch&lt;/code&gt;?  It works well enough to upgrade my WordPress installation, after all.&lt;/p&gt;
&lt;p&gt;From a technology fetishist point of view, there’s plenty to play with and try out.  Would we use ALSA and dmix instead of PulseAudio?  Assuming we didn’t use the Concept Distro to try out going fully volume control per application, of course.  It’d be a great place to see what we can do with Upstart, udev, D-Bus, DeviceKit (replacing HAL)  and other plumbing-layer components.&lt;/p&gt;
&lt;p&gt;In the desktop library layer, the bling guys could play with Multi-Pointer X with kernel-mode setting support and a resolution independent GTK+.  Rendering could be fully indirect or entirely direct GL based, depending on preference.&lt;/p&gt;
&lt;p&gt;And for the desktop itself, the user experience and interface designers have a completely blank canvas to play with.  Since it’s just a Concept Distro, one needn’t worry about the ability of users to transition to new ways of working.  Instead you can see how they react to seeing new ways of working in a demonstration or talk, perform usability testing in the lab and even see how they get on in the field.&lt;/p&gt;
&lt;p&gt;It would be a very fun and exciting project.&lt;/p&gt;
&lt;p&gt;Unfortunately, unlike the car world, there’s not necessarily the funding for such a thing.  Who would want to finance an ongoing software development project that was explicitly intended to have no users?&lt;/p&gt;
&lt;p&gt;In the automotive world, the Concept Car from a development point of view is important since companies cannot, for example, experiment with new engine technologies and expect their customers to be able to drive them on the road.  In the software world, such “lab” projects are much easier to develop in isolation and tend to remain on our own workstations.&lt;/p&gt;
&lt;p&gt;The Concept Car can also serve as a marketing tool, it draws potential customers to your show stand and while looking at the sexy car on the stand they’re ripe for being sold a somewhat more pedestrian road car.  It also aids towards customer loyalty, since you’re more likely to buy another car from a manufacturer who is showing off the most advanced concepts.&lt;/p&gt;
&lt;p&gt;In the Linux world, while we appear to have direct competitions between the distributions, the reality is that we co-operate far more than you might expect unless you’re involved with development.  A Concept Distro would need upstream work from just about everybody.&lt;/p&gt;
&lt;p&gt;And would such a thing help convert people from Windows or Mac OS?  If it would, maybe it’s a good idea after all.&lt;/p&gt;</description>
	<pubDate>Mon, 18 Aug 2008 08:14:23 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Whatever you do, don’t fix the kernel!</title>
	<guid>http://www.netsplit.com/?p=170</guid>
	<link>http://www.netsplit.com/2008/08/14/whatever-you-do-dont-fix-the-kernel/</link>
	<description>&lt;p&gt;As you may have read in &lt;a title=&quot;LWN: Udev rules and the management of the plumbing layer&quot; href=&quot;http://lwn.net/Articles/293689/&quot;&gt;LWN&lt;/a&gt; (subscription required, and strongly recommended anyway), there&amp;#8217;s been some argument on the &lt;a href=&quot;http://marc.info/?l=linux-hotplug&quot;&gt;linux-hotplug&lt;/a&gt; mailing list, the historically named home of udev development, about device naming.&lt;/p&gt;
&lt;p&gt;The key threads are &amp;#8220;&lt;a href=&quot;http://marc.info/?l=linux-hotplug&amp;m=121827722928218&quot;&gt;default udev rules&lt;/a&gt;&amp;#8221; and &amp;#8220;&lt;a href=&quot;http://marc.info/?l=linux-hotplug&amp;m=121864820123971&quot;&gt;Patches for device names&lt;/a&gt;&amp;#8220;.&lt;/p&gt;
&lt;p&gt;It all started when Kay reminded everybody that distributions should attempt to drop their own udev rules in favour of those supplied by upstream.  For those not familar with udev, the rules are a language that creates device nodes and performs other actions based the information about that device from the kernel.  A typical rule to put all devices from the &amp;#8220;sound&amp;#8221; subsystem into the &amp;#8220;audio&amp;#8221; group looks like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SUBSYSTEM==&quot;sound&quot;, GROUP=&quot;audio&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes these rules also change the names of the devices.  For example rules such as the following are automatically generated to keep the name of your ethernet devices the same between reboots:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SUBSYSTEM==&quot;net&quot;, ATTRS{address}==&quot;00:11:22:33:44:55&quot;, ATTR{type}==&quot;1&quot;, NAME=&quot;eth0&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ironically, perhaps, none of the argument is about the names of the devices, the permissions assigned or the groups they&amp;#8217;re placed in.  We&amp;#8217;re all pretty much in agreement about that.&lt;/p&gt;
&lt;p&gt;Every major distribution pretty much follows the plan laid out in the &lt;a href=&quot;http://www.mjmwired.net/kernel/Documentation/devices.txt&quot;&gt;devices.txt&lt;/a&gt; file found in the kernel&amp;#8217;s Documentation sub-directory.  This is maintained by the &lt;a href=&quot;http://www.lanana.org/&quot;&gt;Linux Assigned Names and Numbers Authority&lt;/a&gt;, and up until 2.2, was included by reference in the &lt;a href=&quot;http://www.pathname.com/fhs/&quot;&gt;Filesystem Hierarchy Standard&lt;/a&gt; (FHS).  Nobody really knows why the reference was removed, I guess the LSB didn&amp;#8217;t like having standards everybody agreed on &lt;img src=&quot;http://www.netsplit.com/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt; &lt;/p&gt;
&lt;p&gt;So what is the argument about?  Marco d&amp;#8217;Itri, the Debian udev maintainer, is arguing because he&amp;#8217;s spent a lot of time and effort making their rules readable and elegant in their operation.  The upstream rules are, in his opinion, somewhat scraggy.  I don&amp;#8217;t really see this as a problem, we can fix the upstream rules to be more elegant easily enough.&lt;/p&gt;
&lt;p&gt;My argument is different, and is a little more fundamental.&lt;/p&gt;
&lt;p&gt;While most of the rules do udev-specific things like permissions, groups, run callouts to gather more information and perhaps run programs after device creation, we have many rules such as this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;KERNEL==&quot;hw_random&quot;, NAME=&quot;hwrng&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;What that says is:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Rename the kernel device &amp;#8220;hw_random&amp;#8221; to &amp;#8220;hwrng&amp;#8221;.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This makes the device name correct according to devices.txt.  What irritates me about this is that this rule should be entirely unnecessary!  It would be a one line patch to the kernel to cause it to name the device properly in the first place.  Then we wouldn&amp;#8217;t need to spend the resource and CPU time changing the name every single time every Linux machine around the world boots.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s another set of rules that annoys me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;KERNEL==&quot;device-mapper&quot;, NAME=&quot;mapper/control&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The kernel object for the device mapper control node is &lt;code&gt;/sys/class/misc/device-mapper&lt;/code&gt;, but the device name according to devices.txt should be &lt;code&gt;/dev/mapper/control&lt;/code&gt; - in a sub-directory.  The kernel and udev have a mechanism to deal with this, the kernel object could be named &lt;code&gt;/sys/class/misc/mapper!control&lt;/code&gt; and the right thing will happen.&lt;/p&gt;
&lt;p&gt;Another similar class of devices needs udev to rename them:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;KERNEL==&quot;mice&quot;, NAME=&quot;input/mice&quot;
KERNEL==&quot;mouse[0-9]*&quot;, NAME=&quot;input/mouse%n&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first one seems straight forward, but the kernel object is named &lt;code&gt;/sys/class/input/mice&lt;/code&gt; so if we used the ! trick, it would become &lt;code&gt;/sys/class/input/input!mice&lt;/code&gt;.  I can appreciate that it&amp;#8217;s ugly.  Similarly for the mouse case.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve suggested a fix for this though, and this fix also alleviates any concerns about backwards compatibility with sysfs names.  The uevent from the kernel for the &amp;#8220;mice&amp;#8221; device looks like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;ACTION=add
DEVPATH=/devices/virtual/input/mice
SUBSYSTEM=input
MAJOR=13
MINOR=63&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;#8217;ve suggested where the device ends up in a sub-directory, adding an extra field to this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;DEVNAME=input/mice&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;When present, udev would use this instead of the last part of the sysfs path as the kernel name.  The extra cost to the kernel is a single &lt;code&gt;%s&lt;/code&gt; in an existing &lt;code&gt;sprintf()&lt;/code&gt; call, the result, a vast saving in userspace time.&lt;/p&gt;
&lt;p&gt;This fix would also let us deal with the raw USB devices, and other things like the DVB devices, where we have to construct the device names.  For example, the following rule is used to name DVB devices:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SUBSYSTEM==&quot;dvb&quot;, PROGRAM=&quot;/bin/sh -c 'K=%k; K=$${K#dvb}; printf dvb/adapter%%i/%%s $${K%%%%.*} %%{K#*.}&quot; NAME=&quot;%c&quot;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;That means that for every DVB device, on every computer, every time Linux boots, we have to fork and exec a shell, do some string pattern matching, fork and exec printf and apply more string pattern matching to the format string to name the device.&lt;/p&gt;
&lt;p&gt;This could be avoided by doing that printf in the kernel, and setting DEVNAME for that device.&lt;/p&gt;
&lt;p&gt;Device names are set down in a standard.  That standard is shipped inside the kernel&amp;#8217;s own source tree.  Most distributions are already following that standard.  The udev default rules follow that standard.  Most distributions are likely to adopt the default udev rules.  This is, for all intents and purposes, as official naming policy as you can get.&lt;/p&gt;
&lt;p&gt;For those devices where the name is static, or constructed entirely from information from the kernel (ie. not persistent storage, input, network, etc.); why do we waste resource and CPU time every single boot changing the name that the kernel exports to match the standard?&lt;/p&gt;
&lt;p&gt;To me this is obvious, fix the kernel to export the right name in the first place.&lt;/p&gt;
&lt;p&gt;To kernel developers, such as Greg K-H, this is not so obvious:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#8220;Wait, why do this at all?&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#8220;Can&amp;#8217;t you live with input devices having a few rules in udev?  Is it really that hard to maintain?  :)&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;While patches were apparently welcome in the first thread, by the second thread when it was clear that patches were going to be done, they didn&amp;#8217;t seem quite so welcome after all.&lt;/p&gt;
&lt;p&gt;This isn&amp;#8217;t the first time that I&amp;#8217;ve seen kernel developers claim that it&amp;#8217;s better to work around the kernel in userspace than it is to fix it.  I could understand this if we didn&amp;#8217;t have the source code to our own kernel, but we do.&lt;/p&gt;
&lt;p&gt;The kernel isn&amp;#8217;t sacred and it isn&amp;#8217;t a separate part of the system.  It needs to be seen as just one component of a fully integrated system, especially by its developers.&lt;/p&gt;
&lt;p&gt;That 12ft-high wall between &amp;#8220;kernel space&amp;#8221; and &amp;#8220;user space&amp;#8221; needs to come down.&lt;/p&gt;
&lt;p&gt;As LWN notes, we have a lot to talk about at the &lt;a href=&quot;http://linuxplumbersconf.org/&quot;&gt;LPC&lt;/a&gt; in September.&lt;/p&gt;</description>
	<pubDate>Thu, 14 Aug 2008 12:45:49 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Development Platform</title>
	<guid>http://www.netsplit.com/?p=155</guid>
	<link>http://www.netsplit.com/2008/08/11/development-platform/</link>
	<description>&lt;p&gt;I&amp;#8217;m afraid I have a confession to make.  A couple of weeks ago, I purchased an &lt;a href=&quot;http://www.apple.com/iphone/&quot;&gt;iPhone&lt;/a&gt;.  And to make matters worse, I&amp;#8217;m wonderfully happy with it.&lt;/p&gt;
&lt;p&gt;Now, I know that I should have got something more compatible with the community that I&amp;#8217;m a member of.  Maybe one of those &lt;a href=&quot;http://www.openmoko.com/&quot;&gt;OpenMoko&lt;/a&gt; powered Neo FreeRunner devices or even an &lt;a href=&quot;http://www.ubuntu.com/products/mobile&quot;&gt;Ubuntu Mobile&lt;/a&gt; powered prototype device.&lt;/p&gt;
&lt;p&gt;But an iPhone it was.  Why?&lt;/p&gt;
&lt;p&gt;Well, frankly I needed something that works today.&lt;/p&gt;
&lt;p&gt;The iPhone is a fascinating device.  Don&amp;#8217;t worry, I&amp;#8217;m not going to go on about its features and all of its bling.  What fascinates me is how easily Apple brought it to market, and now that the &lt;a href=&quot;http://www.apple.com/iphone/appstore/&quot;&gt;App Store&lt;/a&gt; is up and running, how quickly native applications are being written for it.&lt;/p&gt;
&lt;p&gt;The most breath-taking thing is that this device is effectively running a version of Mac OS X ported to the ARM processor, and with any unnecessary bits for the smaller platform removed.  The graphics, audio and other core libraries are basically the same as on the bigger brother computers.&lt;/p&gt;
&lt;p&gt;In other words, Apple have done what Linux always promised; turned Darwin into a truly scalable platform.&lt;/p&gt;
&lt;p&gt;What&amp;#8217;s more, the pace at which new applications have been developed for it shows that this platform is easy to write for.  My phone has rich, native applications for &lt;a href=&quot;http://twitter.com/&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;http://www.facebook.com/&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;http://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt; and &lt;a href=&quot;http://www.google.com/&quot;&gt;Google&lt;/a&gt;; none of which came pre-installed.&lt;/p&gt;
&lt;p&gt;I have a theory about how they&amp;#8217;ve managed to scale their platform so quickly down to a size that fits in my pocket whilst also running on a machine that barely fits on my desk.  The same theory explains why developers have been so quick to develop applications for it.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not that their platform is better, or more capable, or even necessarily more flexible.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s that their platform is better componentised.&lt;/p&gt;
&lt;p&gt;The core technologies of their platform are grouped into easy to understand components.  It&amp;#8217;s easy to draw boxes that show how these stack up to provide functionality to the developers, and it&amp;#8217;s easy to see which boxes you can remove when scaling the platform down.  Documentation is easier to write too, each component has a specific function and tech writers can turn that into a story and write simple to understand overviews and rich API documentation.&lt;/p&gt;
&lt;p&gt;Audio playback is a great example here.&lt;/p&gt;
&lt;p&gt;In Linux, you want to play sounds from your application, so you have a quick hunt around for Linux audio APIs.  Your resulting list looks something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libcanberra - &amp;#8220;a simple abstract interface for playing event sounds&amp;#8221;&lt;/li&gt;
&lt;li&gt;gnome-sound - &amp;#8220;Sound playing routines&amp;#8221;&lt;/li&gt;
&lt;li&gt;GStreamer - &amp;#8220;Media framework&amp;#8221;&lt;/li&gt;
&lt;li&gt;PulseAudio - &amp;#8220;Sound Server&amp;#8221;&lt;/li&gt;
&lt;li&gt;ESD - &amp;#8220;Enlightened Sound Daemon&amp;#8221;&lt;/li&gt;
&lt;li&gt;libasound2 - &amp;#8220;ALSA library&amp;#8221;&lt;/li&gt;
&lt;li&gt;ALSA - &amp;#8220;Advanced Linux Sound Architecture&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And those are just the libraries and daemons installed by default, and I didn&amp;#8217;t even include the format libraries such as libogg.  If I were to include those, and the various other sound daemons, mixers and framework libraries (hello, Phonon), we&amp;#8217;d be here all night.&lt;/p&gt;
&lt;p&gt;Where is an application developer actually supposed to start?&lt;/p&gt;
&lt;p&gt;Even I have no real idea where GStreamer, PulseAudio and ALSA begin and end; and where they overlap and contradict each other, which I&amp;#8217;m supposed to use.&lt;/p&gt;
&lt;p&gt;Apple developers have it much easier.  If you want to do anything with audio, you want &lt;a href=&quot;http://developer.apple.com/audio/&quot;&gt;Core Audio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If I were to try and do something more interesting, like putting things on the screen, a somewhat common requirement for GUI applications, I&amp;#8217;d have to read up on Clutter, Pigment, GTK+, GDK, Cairo, Pango, FreeType, Xft and X11.  At least.&lt;/p&gt;
&lt;p&gt;An analogy can be drawn with Lego.&lt;/p&gt;
&lt;p&gt;When I was a young kid, if I wanted to make cars to sit on the roads around my lego town, you used to have to build them from scratch.  I didn&amp;#8217;t really care about lego cars, but the town looked silly without them, so it was a chore.&lt;/p&gt;
&lt;p&gt;The chassis for each car was the same.  A 1&amp;#215;4 flat at each end for the bumpers, with a 2&amp;#215;4 end on in the middle to make the wheel arches.  These were joined by a 4&amp;#215;4 to make the car floor.  (Sadly I couldn&amp;#8217;t find any images on Google).&lt;/p&gt;
&lt;p&gt;You had to know how to do it, but when you did there was a certain pride in being able to build a car from memory and knowing how all the pieces fit together.  If you cared about cars, anyway.&lt;/p&gt;
&lt;p&gt;Then an amazing thing occurred.  Lego released a new car, and in the box was a single piece that made the chassis.  No more mucking around and searching for lost bits, or realising you&amp;#8217;d built it upside down.  Now you could instead spend more time deciding what colour the body and windows would be, or if you really didn&amp;#8217;t care, spend more time on the houses and other buildings that were more fun to build.&lt;/p&gt;
&lt;p&gt;If the single piece wasn&amp;#8217;t right, nothing stopped you building your own custom chassis, but it was a great time-saver.  Nowadays they probably have a box where a complete car rolls out, but that&amp;#8217;s ok too.  Those are the boxes for people who really don&amp;#8217;t care about cars, but understand that they need them to fill the multi-storey car park.  They do other boxes with a thousand pieces to build a single car for those people who like making cars.  Those are neat, the engines look like they&amp;#8217;re working and everything!&lt;/p&gt;
&lt;p&gt;Apple&amp;#8217;s approach is somewhat like this.  Their APIs are grouped into big components that you can quickly get to grips with, and spend your time on the interesting bits of the application.  Linux&amp;#8217;s API stack is more like a box of bits, you have to know how to fit them together and build the chassis before you start.&lt;/p&gt;
&lt;p&gt;The only people that really delight in the differences between GTK+, GDK, Cairo and X11 are the authors of those particular parts of the platforms.  The rest of us really wish we just had a single piece marked &amp;#8220;InterfaceKit&amp;#8221; that we could use.&lt;/p&gt;</description>
	<pubDate>Mon, 11 Aug 2008 08:00:42 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: LSB 4</title>
	<guid>http://www.netsplit.com/?p=152</guid>
	<link>http://www.netsplit.com/2008/08/04/lsb-4/</link>
	<description>&lt;p&gt;&lt;em&gt;Any views or opinions expressed here are my own, and not that of my employer or any project I am a member of.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.internetnews.com/&quot;&gt;InternetNews&lt;/a&gt; ran a story last Thursday (picked up via &lt;a href=&quot;http://lwn.net/&quot;&gt;LWN&lt;/a&gt;) asking whether &lt;a href=&quot;http://www.internetnews.com/dev-news/article.php/3762591/Will+LSB+4+Standardize+Linux.htm&quot;&gt;LSB 4 will standardize Linux&lt;/a&gt;?  In it, they interview Jim Zemlin, the executive director of the Linux Foundation, and the article expresses the feeling that if only the distributions would adopt it, the world would be a better place.&lt;/p&gt;
&lt;p&gt;To those that know me, I may sound like a skipping CD, but I just don&amp;#8217;t see anything in LSB 4 that will change the current situation because they have not addressed the fundamental problem with the LSB.&lt;/p&gt;
&lt;p&gt;The failure of the LSB to actually engage with the distributions it&amp;#8217;s attempting to standardise.&lt;/p&gt;
&lt;p&gt;This wouldn&amp;#8217;t be so much of a problem if the LSB attempted to document existing practice in the form of standards, while acting as a forum for development of new practices which could be trialled before standardisation.  Much as the &lt;a href=&quot;http://www.ietf.org/&quot;&gt;IETF&lt;/a&gt; does, now.&lt;/p&gt;
&lt;p&gt;Instead, the LSB sees itself as a development group that decides on future direction itself and dictates that to the distributions.  That&amp;#8217;s not necessarily a bad thing, it&amp;#8217;s pretty much the way that the &lt;a href=&quot;http://www.w3.org/&quot;&gt;W3C&lt;/a&gt; works.  But to work successfully, you must represent everybody that you expect to follow the standard.&lt;/p&gt;
&lt;p&gt;To this day, the LSB still feels like an RPM-only club.  The core specification specifically requires RPM, and in fact much of the other system-related pieces are based on the layout and design of RedHat and its derivatives.&lt;/p&gt;
&lt;p&gt;That is, except for those bits that the LSB invented all by itself, such as the Init Scripts section.&lt;/p&gt;
&lt;p&gt;While much of the LSB can be hacked into a different distribution through compatibility layers and tools, such as alien, what ISV or other vendor wants to provide a support contract against a distribution that has such kludges?&lt;/p&gt;
&lt;p&gt;The whole point of the LSB is that ISVs and other vendors feel confident being able to simply target their software or platform to the standard, and safe to honour support contracts on any deployment to an LSB-certified operating system.&lt;/p&gt;
&lt;p&gt;If the distributions themselves don&amp;#8217;t directly implement the LSB specification, there will never be the confidence to deploy against it directly and we&amp;#8217;ll remain in a world where vendors directly target the distributions.&lt;/p&gt;
&lt;p&gt;And until the LSB invites all of the distributions to the table to fundamentally redraft the specification to provide a common base that they are all happy to implement directly, they&amp;#8217;ll still conform through hacks, kludges and compatibility layers.&lt;/p&gt;</description>
	<pubDate>Mon, 04 Aug 2008 12:56:24 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: Intrepid Sprint (London)</title>
	<guid>http://www.netsplit.com/?p=151</guid>
	<link>http://www.netsplit.com/2008/07/14/intrepid-sprint-london/</link>
	<description>&lt;p&gt;The great thing about the Ubuntu distro team development sprints is that you get to sit around a table and share your knowledge about workarounds for all of the broken things in the current release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To get the machine to resume from suspend, boot an older kernel&lt;/li&gt;
&lt;li&gt;To get X to start, disable usplash&lt;/li&gt;
&lt;li&gt;To get a useful desktop, wait for the white screen, press Alt+F2 and type &amp;#8220;&lt;code&gt;metacity --replace&lt;/code&gt;&amp;#8220;&lt;/li&gt;
&lt;/ul&gt;</description>
	<pubDate>Mon, 14 Jul 2008 10:26:21 +0000</pubDate>
</item>
<item>
	<title>Scott James Remnant: GUADEC Hacking</title>
	<guid>http://www.netsplit.com/?p=150</guid>
	<link>http://www.netsplit.com/2008/07/10/guadec-hacking/</link>
	<description>&lt;p&gt;&lt;img class=&quot;alignnone&quot; src=&quot;http://www.netsplit.com/files/2008/gnome-calculator-tabbed.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 10 Jul 2008 23:16:36 +0000</pubDate>
</item>
<item>
	<title>Edd Dumbill: Tolling the bell for the gatekeepers</title>
	<guid>http://times.usefulinc.com/2008/07/06-gatekeepers</guid>
	<link>http://times.usefulinc.com/2008/07/06-gatekeepers</link>
	<description>&lt;p&gt;The current gatekeepers of the web and computing industry include publications such as&amp;nbsp;&lt;a href=&quot;http://www.techcrunch.com/&quot;&gt;TechCrunch&lt;/a&gt; and &lt;a href=&quot;http://www.techmeme.com/&quot;&gt;TechMeme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I barely ever read these, and here's why. They only tell me things about the big boys, mostly when money is involved. It hardly matters to me who VCs are investing in, what advertising strategy Facebook is pursuing, or the fact yet another social network for cats has been launched.&lt;/p&gt;
&lt;p&gt;That's not what I'm in technology for: I want to hear about genuine advance, discovery, code I can read, services I can use, new applications of research. And I want to share with and learn from others in the same ecosphere.&lt;/p&gt;
&lt;p&gt;Unfortunately, the gatekeepers can have a stifling, negative effect on the industry and community. Our thinking has become dull, and our attitude one of sniping. (I have a deep urge to rant about various small-minded inaccurate stories I've seen of late. But if you're getting my point, I needn't bother. And if you're not, well, it won't help)&lt;/p&gt;
&lt;p&gt;The competition for cash &amp;mdash; directly connected to TechCrunch exposure &amp;mdash; is odious. I'm not prepared to even start doing the self-prostitution it takes to get into that echo chamber of A-list tech people. By far and away the most interesting and inspiring people I've encountered on the web recently haven't registered at all on the valley meme-o-meter.&lt;/p&gt;
&lt;h3&gt;It's time for another cycle to start&lt;/h3&gt;
&lt;p&gt;These things do come in cycles, of course. TC and TechMeme are themselves usurpers of a previous generation of media gatekeepers, and they in turn will be overtaken.&lt;/p&gt;
&lt;p&gt;In the space between the installation of gatekeepers it's a great time for innovation, rich discussions, and changing people's minds. When I read tech news, I want to be inspired to build, create and cheer about it.&lt;/p&gt;
&lt;p&gt;There was a children's TV programme while I was growing up called &quot;&lt;a href=&quot;http://www.bbc.co.uk/cult/classic/titles/whydontyou.shtml&quot;&gt;Why don't you?&lt;/a&gt;&quot;, entitled in full &quot;Why don't you just switch off your television set and go out and do something less boring instead?&quot; I want to read stuff like that.&lt;/p&gt;
&lt;p&gt;Some of the places I've been finding worthwhile news recently include:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.friendfeed.com/&quot;&gt;FriendFeed&lt;/a&gt; &amp;mdash; essentially a &quot;lifestream aggregator&quot;, it's the commenting feature in FriendFeed that has allowed it to become a useful means of gathering news and information. It systematizes the way I've discovered tech news for the last ten years, through a network of individuals whom you are interested in. Additionally FriendFeed&amp;nbsp;presents the opportunity for engaging debate that feels a lot more alive than blog comments (I wonder if this isn't due in part to the neutrality of the venue.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tech.newsjunk.com/&quot;&gt;TechJunk&lt;/a&gt;&amp;nbsp;&amp;mdash; a new tech news aggregator created by Dave Winer, with the intent of enabling discovery of smaller interesting technical news items, not just what the behemoths and well-connected are doing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/timoreilly&quot;&gt;@timoreilly on Twitter&lt;/a&gt; &amp;mdash; Tim's always been a discoverer and amplifier of important and interesting trends, and what he does on Twitter is a microcosm of what he does for his day job.&lt;/p&gt;
&lt;h3&gt;It's about the people&lt;/h3&gt;
&lt;p&gt;One of the things all those sources I just mentioned have in common is people. The kind of people who &amp;mdash; whether you agree with them or not &amp;mdash; don't get bound up by gatekeepers.&lt;/p&gt;
&lt;p&gt;I've always believed that the best publications are those with the best editors. I've never cared for the &quot;daily me&quot; style of personalized news, because I want to learn things outside of my own scope, and neither for the &lt;a href=&quot;http://www.digg.com/&quot;&gt;Digg&lt;/a&gt; style of populism, because all too often it's folly, not wisdom, one finds in crowds.&lt;/p&gt;
&lt;p&gt;In the spirit of this, I'd love to hear where others go for incisive, non-mainstream, news. Let me know in the comments.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://times.usefulinc.com/2008/07/06-gatekeepers#disqus_thread&quot;&gt;Join the conversation about this post&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Sun, 06 Jul 2008 15:59:23 +0000</pubDate>
</item>

</channel>
</rss>
