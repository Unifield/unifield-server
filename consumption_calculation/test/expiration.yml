-
  In order to test the product likely to expire report, I will create
  new reports and see if values are good
-
  !record {model: product.likely.expire.report, id: pler1}:
    date_from: !eval time.strftime('%Y-%m-%d')
    date_to: !eval "'2020-12-31'"
    consumption_type: fmc
-
    I launch the calculation
- 
  !python {model: product.likely.expire.report}: |
    self.process_lines(cr, uid, ref('pler1'), context=context)
-
  Check if all lines are created
- 
  !python {model: product.likely.expire.report}: |
    report = self.browse(cr, uid, ref('pler1'), context=context)
    assert len(report.line_ids) >= 3, "All lines aren't created by the expiry calculation process"
    p5 = p6 = p7 = False
    for line in report.line_ids:
      if line.product_id.id == ref('product5'):
        p5 = True
      if line.product_id.id == ref('product6'):
        p6 = True
      if line.product_id.id == ref('product7'):
        p7 = True
    assert p5, "No line created for P5"
    assert p6, "No line created for P6"
    assert p7, "No line created for P7"
-
  Check if the first line has good values
- 
  !python {model: product.likely.expire.report.line}: |
    import time
    import datetime
    from dateutil.relativedelta import relativedelta
    line_ids = self.search(cr, uid, [('product_id', '=', ref('product5')), ('report_id', '=', ref('pler1'))], context=context)
    for line in self.browse(cr, uid, line_ids, context=context):
      assert line.in_stock == 80.00, "In stock is not correct for the product P5"
      assert line.total_expired == 55.00, "Expired quantity is not correct for product P5"
      assert line.consumption == 15.00, "Consumption is not correct for product P5"
      item_ids = self.pool.get('product.likely.expire.report.item').search(cr, uid, [('line_id', '=', line.id)])
      first_month = False
      if time.strftime('%m') == '02' and int(time.strftime('Y')) % 4 == 0 and int(time.strftime('%d')) < 17:
        first_month = True
      elif time.strftime('%m') == '02' and int(time.strftime('Y')) % 4 != 0 and int(time.strftime('%d')) < 16:
        first_month = True
      elif time.strftime('%m') in ('04', '06', '09', '11') and int(time.strftime('%d')) < 18:
        first_month = True
      elif int(time.strftime('%d')) < 19:
        first_month = True
        
      item1 = self.pool.get('product.likely.expire.report.item').browse(cr, uid, item_ids[0])
      if not first_month:
        assert item1.expired_qty == 0.00, "1"
      else:
        assert item1.expired_qty == 29.00, "2"
      
      item2 = self.pool.get('product.likely.expire.report.item').browse(cr, uid, item_ids[1])
      if not first_month:
        assert item2.expired_qty == 29.00, "3"
      else:
        assert item2.expired_qty == 0.00, "4"
        
      item3 = self.pool.get('product.likely.expire.report.item').browse(cr, uid, item_ids[2])
      if not first_month:
        assert item3.expired_qty == 26.00, "5"
      else:
        assert item3.expired_qty == 26.00, "6"
        
      item4 = self.pool.get('product.likely.expire.report.item').browse(cr, uid, item_ids[3])
      if not first_month:
        assert item4.expired_qty == 0.00, "7"
      else:
        assert item4.expired_qty == 0.00, "8"
