-
  In order to test the cashbox balance I create a Cash Register then I open it and I create some lines. Then I check that the cashbox balance is OK.
-
  I create a period
-
  !record {model: account.period, id: period_3}:
    company_id: base.main_company
    date_start: !eval "'%s-03-01' %(datetime.now().year)"
    date_stop: !eval "'%s-03-31' %(datetime.now().year)"
    fiscalyear_id: account.data_fiscalyear
    name: !eval "'Jan-%s' %(datetime.now().year)"
    special: 1
-
  I create a Cash Register with Opening balance to 475 EUR.
-
 !record {model: account.bank.statement, id: account_bank_statement_0}:
    date: !eval time.strftime('%Y-%m-%d')
    journal_id: account.cash_journal
    name: 
    period_id: period_3
    user_id: base.user_root
    starting_details_ids:
      -  pieces: 10.0
         number: 10
         subtotal: 100.0
      -  pieces: 20.0
         number: 12
         subtotal: 240.0
      -  pieces: 50.0
         number: 1
         subtotal: 50.0
      -  pieces: 5.0
         number: 17
         subtotal: 85
    balance_start: 475.0
    balance_end: 475.0
-
  I clicked on Open CashBox button to open the cashbox
-
 !python {model: account.bank.statement}: |
    self.button_open_cash(cr, uid, [ref("account_bank_statement_0")], {"lang": "en_US", "tz": False, "active_model": "account.bank.statement", \
        "active_ids": [ref("account_bank_statement_0")], "active_id": ref("account_bank_statement_0"), })
-
  I check that now Cash register is in the "Open" state
-
  !assert {model: account.bank.statement, id: account_bank_statement_0}:
    - state == 'open'
-
  I create two lines with an amount out of 25 EUR and an amount out of 50 EUR. Then I create a line with an amount in of 25 EUR.
-
  !record {model: account.bank.statement, id: account_bank_statement_0}:
    line_ids:
      - account_id: account.a_expense
        amount: -25.0
        date: !eval time.strftime('%Y-%m-%d')
        name: test1
        partner_id: base.res_partner_4
        sequence: 0.0
        type: general
      - account_id: account.a_expense
        amount: -50.0
        date: !eval time.strftime('%Y-%m-%d')
        name: test2
        partner_id: base.res_partner_3
        sequence: 1.0
        type: general
      - account_id: account.a_recv
        amount: 25.0
        date: !eval time.strftime('%Y-%m-%d')
        name: test3
        partner_id: base.res_partner_4
        sequence: 2.0
        type: general
-
  I check that the cashbox balance is OK.
-
  !python {model: account.bank.statement, id: account_bank_statement_0}: |
    res = self._end_balance(cr, uid, [ref("account_bank_statement_0")])
    assert self.read(cr, uid, [ref("account_bank_statement_0")], ['balance_end'])[0].get('balance_end') == 425.0, "Balance End is not equal to 425!"
