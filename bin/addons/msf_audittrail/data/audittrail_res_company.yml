-
  For the Company (res.company), track the creation and modification
-  
  !python {model: audittrail.rule}: |
    name = 'Company'
    object_ids = self.pool.get('ir.model').search(cr, uid, [('model', '=', 'res.company')], context=context)
    rule_id = self.search(cr, uid, [('object_id', 'in', object_ids)], context=context)
    if object_ids:
        fields = ['name', 'partner_id', 'instance_id', 'counterpart_hq_entries_default_account', 'property_reserve_and_surplus_account',
                  'salaries_default_account', 'import_invoice_default_account', 'intermission_default_counterpart', 'additional_allocation',
                  'revaluation_default_account', 'ye_pl_cp_for_bs_debit_bal_account', 'ye_pl_cp_for_bs_credit_bal_account',
                  'ye_pl_pos_credit_account', 'ye_pl_ne_credit_account', 'ye_pl_pos_debit_account', 'ye_pl_ne_debit_account',
                  'currency_date_type', 'currency_date_beginning', 'schedule_range', 'shipment_lead_time', 'preparation_lead_time',
                  'cheque_debit_account_id', 'cheque_credit_account_id', 'bank_debit_account_id', 'bank_credit_account_id',
                  'cash_debit_account_id', 'cash_credit_account_id']

        fields_ids = self.pool.get('ir.model.fields').search(cr, uid, [('model', '=', 'res.company'), ('name', 'in', fields)], context=context)

        vals = {
            'name': name,
            'object_id': object_ids[0],
            'log_write': True,
            'log_create': True,
            'log_unlink': False,
            'field_ids': [(6, 0, fields_ids)],
        }

        if not rule_id:
            rule_id = self.create(cr, uid, vals, context=context)
        elif rule_id:
            self.write(cr, uid, rule_id, vals, context=context)
        # Subscribe to the rule
        self.subscribe(cr, uid, rule_id)
