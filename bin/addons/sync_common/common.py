import re
import sys
import traceback
import pprint
import hashlib
import json


import tools
from tools.translate import _

# model related to synchronization, this model don't have to be ignored.
WHITE_LIST_MODEL = [
'account.account',
'account.account.type',
'account.analytic.account',
'account.analytic.journal',
'account.analytic.line',
'account.bank.statement',
'account.bank.statement.line',
'account.bank.statement.line.deleted',
'account.cashbox.line',
'account.destination.link',
'account.fiscalyear',
'account.fiscalyear.state',
'account.journal',
'account.move',
'account.move.line',
'account.move.reconcile',
'account.period',
'account.period.state',
'account.target.costcenter',
'account.tax',
'account.tax.code',
'analytic.distribution',
'claim.event',
'claim.product.line',
'composition.item',
'composition.kit',
'cost.center.distribution.line',
'country.export.mapping',
'distribution.line',
'financing.contract.contract',
'financing.contract.donor',
'financing.contract.format',
'financing.contract.format.line',
'financing.contract.funding.pool.line',
'free.1.distribution.line',
'free.2.distribution.line',
'funding.pool.distribution.line',
'hq.entries',
'hr.employee',
'hr.job',
'initial.stock.inventory',
'initial.stock.inventory.line',
'ir.actions.act_window',
'ir.model.access',
'ir.rule',
'ir.translation',
'kit.creation',
'kit.creation.to.consume',
'monthly.review.consumption',
'monthly.review.consumption.line',
'msf.budget',
'msf.budget.decision.moment',
'msf.budget.line',
'msf_button_access_rights.button_access_rule',
'msf_field_access_rights.field_access_rule',
'msf_field_access_rights.field_access_rule_line',
'msf.instance',
'pack.type',
'procurement.order',
'procurement.rules.report',
'product.asset',
'product.asset.type',
'product.category',
'product.justification.code',
'product.list',
'product.list.line',
'product.nomenclature',
'product.pricelist',
'product.pricelist.type',
'product.pricelist',
'product.pricelist.type',
'product.pricelist.version',
'product.product',
'product.uom',
'product.uom.categ',
'purchase.order',
'purchase.order.line',
'real.average.consumption',
'real.average.consumption.line',
'res.company',
'res.country',
'res.country.restriction',
'res.country.state',
'res.currency',
'res.currency.rate',
'res.currency.table',
'res.groups',
'res.partner',
'res.partner.address',
'res.users',
'return.claim',
'sale.order',
'sale.order.line.cancel',
'shipment',
'stock.frequence',
'stock.inventory',
'stock.inventory.line',
'stock.journal',
'stock.location',
'stock.location.chained.options',
'stock.mission.report',
'stock.mission.report.line',
'stock.move',
'stock.picking',
'stock.production.lot',
'stock.warehouse',
'stock.warehouse.automatic.supply',
'stock.warehouse.automatic.supply.line',
'stock.warehouse.order.cycle',
'stock.warehouse.order.cycle.line',
'stock.warehouse.orderpoint',
'supplier.catalogue',
'supplier.catalogue.line',
'sync.monitor',
'sync.sale.order.line.split',
'sync.version.instance.monitor',
'threshold.value',
'threshold.value.line']

MODELS_TO_IGNORE = [
 'account.account.template',
 'account.addtmpl.wizard',
 'account.aged.trial.balance',
 'account.analytic.balance',
 'account.analytic.chart',
 'account.analytic.coa',
 'account.analytic.cost.ledger',
 'account.analytic.cost.ledger.journal.report',
 'account.analytic.inverted.balance',
 'account.analytic.journal.fake',
 'account.analytic.Journal.report',
 'account.automatic.reconcile',
 'account.balance.report',
 'account.bank.accounts.wizard',
 'account.bs.report',
 'account.central.journal',
 'account.change.currency',
 'account.chart',
 'account.chart.template',
 'account.coa',
 'account.commitment',
 'account.commitment.line',
 'account.common.account.report',
 'account.common.journal.report',
 'account.common.partner.report',
 'account.common.report',
 'account.destination.summary',
 'account.direct.invoice.wizard',
 'account.direct.invoice.wizard.line',
 'account.drill',
 'account.entries.report',
 'account.export.mapping',
 'account.fiscal.position',
 'account.fiscal.position.account',
 'account.fiscal.position.account.template',
 'account.fiscal.position.tax',
 'account.fiscal.position.tax.template',
 'account.fiscal.position.template',
 'account.fiscalyear.close',
 'account.fiscalyear.close.state',
 'account.general.journal',
 'account.installer',
 'account.installer.modules',
 'account.invoice',
 'account.invoice.cancel',
 'account.invoice.confirm',
 'account.invoice.line',
 'account.invoice.refund',
 'account.invoice.report',
 'account.invoice.tax',
 'account.journal.column',
 'account.journal.fake',
 'account.journal.period',
 'account.journal.select',
 'account.journal.view',
 'account.line.csv.export',
 'account.mcdb',
 'account.model',
 'account.model.line',
 'account.move.bank.reconcile',
 'account.move.journal',
 'account.move.line.reconcile',
 'account.move.line.reconcile.select',
 'account.move.line.reconcile.writeoff',
 'account.move.line.unreconcile.select',
 'account.open.closed.fiscalyear',
 'account.partner.balance',
 'account.partner.balance.tree',
 'account.partner.ledger',
 'account.partner.reconcile.process',
 'account.payment.make.payment',
 'account.payment.populate.statement',
 'account.payment.term',
 'account.payment.term.line',
 'account.period.close',
 'account.period.create',
 'account.pl.report',
 'account.print.journal',
 'account.report.general.ledger',
 'account.sequence.fiscalyear',
 'account.statement.from.invoice',
 'account.statement.from.invoice.lines',
 'account.state.open',
 'account.subscription',
 'account.subscription.generate',
 'account.subscription.line',
 'account.tax.chart',
 'account.tax.code.template',
 'account.tax.template',
 'account.unreconcile',
 'account.unreconcile.reconcile',
 'account.use.model',
 'account.vat.declaration',
 'account.voucher',
 'account.voucher.line',
 'account.voucher.unreconcile',
 'account.year.end.closing',
 'action.traceability',
 'activate.currencies',
 'add.event',
 'allocation.stock.setup',
 'analytic.distribution.wizard',
 'analytic.distribution.wizard.f1.lines',
 'analytic.distribution.wizard.f2.lines',
 'analytic.distribution.wizard.fp.lines',
 'analytic.distribution.wizard.lines',
 'analytic.entries.report',
 'assign.to.kit',
 'assign.to.kit.line',
 'audittrail.log.line',
 'audittrail.log.sequence',
 'audittrail.rule',
 'audittrail.view.log',
 'automated.import',
 'automated.import.function',
 'automated.import.job',
 'automated.import.job.progress',
 'auto.supply.rules.report',
 'backup.config',
 'backup.download',
 'base.language.export',
 'base.language.import',
 'base.language.install',
 'base.module.configuration',
 'base.module.import',
 'base.module.update',
 'base.module.upgrade',
 'base_report_designer.installer',
 'base.report.file.sxw',
 'base.report.rml.save',
 'base.report.sxw',
 'base.setup.company',
 'base.setup.config',
 'base.setup.installer',
 'base.update.translations',
 'board.board',
 'board.board.line',
 'board.menu.create',
 'board.note',
 'board.note.type',
 'cashbox.write.off',
 'change.dest.location',
 'change.product.memory.move',
 'change.product.move.processor',
 'commitment.import.setup',
 'confirm',
 'confirm.import.currencies',
 'create.picking',
 'create.picking.move.processor',
 'create.picking.processor',
 'currency.setup',
 'data.tools',
 'date.tools',
 'debit.note.import.invoice',
 'decimal.precision',
 'deleted.object',
 'deleted_object.orm_extended',
 'delivery.process.setup',
 'documents.done.problem',
 'documents.done.problem.line',
 'documents.done.wizard',
 'email.configuration',
 'enter.reason',
 'expected.sale.order.line',
 'expiry.quantity.report',
 'expiry.quantity.report.line',
 'export.report.stock.inventory',
 'export.report.stock.move',
 'field.orders.setup',
 'fields.tools',
 'finance.tools',
 'financing.contract.account.quadruplet',
 'financing.contract.donor.reporting.line',
 'fixed.asset.setup',
 'from.supplier.choose.catalogue',
 'hq.analytic.reallocation',
 'hq.entries.import',
 'hq.entries.split',
 'hq.entries.split.lines',
 'hq.entries.unsplit',
 'hq.entries.validation',
 'hq.monitor',
 'hq.reallocation',
 'hr.analytic.reallocation',
 'hr.contract.msf',
 'hr.department',
 'hr.employee.category',
 'hr.employee.marital.status',
 'hr.expat.employee.import',
 'hr.installer',
 'hr.nat.staff.import',
 'hr.payroll.deletion',
 'hr.payroll.employee.import',
 'hr.payroll.employee.import.errors',
 'hr.payroll.import',
 'hr.payroll.import.confirmation',
 'hr.payroll.import.period',
 'hr.payroll.msf',
 'hr.payroll.validation',
 'import_category',
 'import.cell.data',
 'import.commitment.wizard',
 'import.currencies',
 'import_data',
 'imported.msf.budget.line',
 'import_nomenclature',
 'import_product',
 'import.table.currencies',
 'incoming.import.xml.line',
 'int.commitment.clear.wizard',
 'int.commitment.export.wizard',
 'int.commitment.realloc.wizard',
 'internal.move.processor',
 'internal.picking.processor',
 'international.transport.cost.report',
 'ir.actions.actions',
 'ir.actions.act_window_close',
 'ir.actions.act_window.view',
 'ir.actions.configuration.wizard',
 'ir.actions.report.xml',
 'ir.actions.server',
 'ir.actions.todo',
 'ir.actions.url',
 'ir.actions.wizard',
 'ir.attachment',
 'ir.config_parameter',
 'ir.cron',
 'ir.cron.linux',
 'ir.default',
 'ir.exports',
 'ir.exports.line',
 'ir.filters',
 'ir.header_img',
 'ir.header_webkit',
 'ir.model',
 'ir.model.data',
 'ir.model.fields',
 'ir.module.category',
 'ir.module.module',
 'ir.module.module.dependency',
 'ir.property',
 'ir.sequence',
 'ir.sequence.type',
 'ir.server.object.lines',
 'ir.ui.menu',
 'ir.ui.view',
 'ir.ui.view.custom',
 'ir.ui.view_sc',
 'ir.values',
 'ir.wizard.screen',
 'kit.mass.import',
 'kit.selection',
 'kit.selection.line',
 'kit.selection.sale',
 'kit.selection.sale.line',
 'lang.setup',
 'local.transport.cost.report',
 'maintenance.contract',
 'make.procurement',
 'mass.reallocation.search',
 'mass.reallocation.verification.wizard',
 'mass.reallocation.wizard',
 'memory.additionalitems',
 'memory.background.report',
 'min.max.rules.report',
 'mission.stock.wizard',
 'modify.expiry.date',
 'monthly.budget.wizard',
 'mrp.property',
 'mrp.property.group',
 'msf.accrual.line',
 'msf.budget.summary',
 'msf.budget.summary.line',
 'msf.budget.tools',
 'msf_button_access_rights.view_config_wizard_install',
 'msf_button_access_rights.view_config_wizard_install_results',
 'msf.doc.import.accounting',
 'msf.doc.import.accounting.errors',
 'msf.doc.import.accounting.lines',
 'msf_instance.setup',
 'msf.language.import',
 'msr_in_progress',
 'multi_company.default',
 'multiple.sourcing.wizard',
 'object.query',
 'object.query.object',
 'object.query.result.fields',
 'object.query.selection_data',
 'object.query.wizard.values',
 'ocba.export.wizard',
 'ocb.export.wizard',
 'ocb.matching.export.wizard',
 'old.product.list.line',
 'order.cycle.rules.report',
 'osv_memory.autovacuum',
 'outgoing.delivery.move.processor',
 'outgoing.delivery.processor',
 'output.currency.for.export',
 'pack.family.memory',
 'partner.clear.ids',
 'partner.sms.send',
 'partner.wizard.ean.check',
 'partner.wizard.spam',
 'patch.scripts',
 'payment.line',
 'payment.mode',
 'payment.order',
 'payment.order.create',
 'payroll.setup',
 'picking.tools',
 'po.automation.config',
 'po.follow.up',
 'ppl.customize.label',
 'ppl.family.processor',
 'ppl.move.processor',
 'ppl.processor',
 'pricelist.partnerinfo',
 'process.condition',
 'process.node',
 'process.process',
 'process.to.consume',
 'process.to.consume.line',
 'process.transition',
 'process.transition.action',
 'procurement.batch.cron',
 'procurement.cycle.compute.all',
 'procurement.min.max.compute.all',
 'procurement.order.compute',
 'procurement.order.compute.all',
 'procurement.orderpoint.compute',
 'procurement.purchase.compute.all',
 'procurement.request.import',
 'procurement.request.sourcing.document',
 'procurement.request.sourcing.document.mem',
 'procurement.supply.compute.all',
 'product.asset.event',
 'product.cold_chain',
 'product.deactivation.error',
 'product.deactivation.error.line',
 'product.heat_sensitive',
 'product.history.consumption',
 'product.history.consumption.month',
 'product.history.consumption.product',
 'product.international.status',
 'product.likely.expire.report',
 'product.likely.expire.report.item',
 'product.likely.expire.report.item.line',
 'product.likely.expire.report.line',
 'product.list.add.products',
 'product.manufacturer.attribute',
 'product.packaging',
 'product.price_list',
 'product.pricelist.item',
 'product.price.type',
 'product.product.import.line.qty',
 'product.section.code',
 'product.status',
 'product.stock.availability',
 'product.supplierinfo',
 'product.supply.source',
 'product.template',
 'product.to.list',
 'product.ul',
 'product.where.used',
 'project.account.analytic.line',
 'project.leadtime.setup',
 'publisher_warranty.contract',
 'publisher_warranty.contract.wizard',
 'purchase.double.validation.installer',
 'purchase.import.xml.line',
 'purchase.installer',
 'purchase.line.import.xml.line',
 'purchase.order.cancel.wizard',
 'purchase.order.change.currency',
 'purchase.order.confirm.wizard',
 'purchase.order.followup',
 'purchase.order.followup.from.menu',
 'purchase.order.followup.line',
 'purchase.order.group',
 'purchase.order.line.allocation.report',
 'purchase.order.line_invoice',
 'purchase.order.line.to.split',
 'purchase.order.line.unlink.wizard',
 'purchase.order.merged.line',
 'purchase.order.simu.import.file',
 'purchase.report',
 'real.consumption.change.location',
 'register.reopen',
 'related.sourcing',
 'report.account.receivable',
 'report.account.sales',
 'report.account_type.sales',
 'report.aged.receivable',
 'report.batch.recall',
 'report.invoice.created',
 'report.stock.inventory',
 'report.stock.lines.date',
 'report.stock.move',
 'report.webkit.actions',
 'res.bank',
 'res.config',
 'res.config.installer',
 'res.config.users',
 'res.config.view',
 'res.country.restriction.memory',
 'res.lang',
 'res.log',
 'res.log.report',
 'resource.calendar',
 'resource.calendar.attendance',
 'resource.calendar.leaves',
 'resource.resource',
 'res.partner.bank',
 'res.partner.bank.type',
 'res.partner.bank.type.field',
 'res.partner.canal',
 'res.partner.category',
 'res.partner.event',
 'res.partner.title',
 'res.payterm',
 'res.request',
 'res.request.history',
 'res.request.link',
 'restrictive.country.setup',
 'res.widget',
 'res.widget.user',
 'res.widget.wizard',
 'return.pack.shipment.family.processor',
 'return.pack.shipment.processor',
 'return.ppl.move.processor',
 'return.ppl.processor',
 'return.shipment.family.processor',
 'return.shipment.processor',
 'sale.advance.payment.inv',
 'sale.config.picking_policy',
 'sale.followup.multi.wizard',
 'sale.installer',
 'sale.make.invoice',
 'sale.open.invoice',
 'sale.order.cancelation.wizard',
 'sale.order.change.currency',
 'sale.order.followup',
 'sale.order.followup.from.menu',
 'sale.order.followup.test',
 'sale.order.leave.close',
 'sale.order.line',
 'sale.order.line.followup',
 'sale.order.line.make.invoice',
 'sale.order.sourcing.progress',
 'sale.order.sourcing.progress.mem',
 'sale.order.unlink.wizard',
 'sale.price.setup',
 'sale.receipt.report',
 'sale.report',
 'sale.shop',
 'sequence.tools',
 'shipment.additionalitems',
 'shipment.additional.line.processor',
 'shipment.family.processor',
 'shipment.processor',
 'shipment.wizard',
 'so.po.common',
 'split.memory.move',
 'split.move',
 'split.move.processor',
 'split.purchase.order.line.wizard',
 'split.sale.order.line.wizard',
 'standard.price.track.changes',
 'stock.analyze.view',
 'stock.batch.recall',
 'stock.card.wizard',
 'stock.card.wizard.line',
 'stock.certificate.picking',
 'stock.certificate.valuation',
 'stock.change.product.qty',
 'stock.change.standard.price',
 'stock.cost.reevaluation',
 'stock.cost.reevaluation.line',
 'stock.fill.inventory',
 'stock.forecast',
 'stock.forecast.export',
 'stock.forecast.line',
 'stock.incoming.processor',
 'stock.incoterms',
 'stock.inventory.line.split',
 'stock.inventory.merge',
 'stock.invoice.onshipping',
 'stock.location.configuration.wizard',
 'stock.location.product',
 'stock.move.cancel.wizard',
 'stock.move.consume',
 'stock.move.in.processor',
 'stock.move.memory.families',
 'stock.move.memory.in',
 'stock.move.memory.out',
 'stock.move.memory.picking',
 'stock.move.memory.ppl',
 'stock.move.memory.returnproducts',
 'stock.move.memory.shipment.additionalitems',
 'stock.move.memory.shipment.create',
 'stock.move.memory.shipment.returnpacks',
 'stock.move.memory.shipment.returnpacksfromshipment',
 'stock.move.processor',
 'stock.move.scrap',
 'stock.move.split',
 'stock.move.split.lines',
 'stock.move.split.lines.exist',
 'stock.move.track',
 'stock.move.tracking',
 'stock.partial.move',
 'stock.partial.picking',
 'stock.picking.cancel.wizard',
 'stock.picking.not.available',
 'stock.picking.processing.info',
 'stock.picking.processor',
 'stock.print.certificate',
 'stock.production.lot.revision',
 'stock.reason.type',
 'stock.remove.location.wizard',
 'stock.replacement',
 'stock.replacement.result',
 'stock.report.prodlots',
 'stock.report.prodlots.virtual',
 'stock.report.tracklots',
 'stock.return.picking',
 'stock.split.into',
 'stock.tracking',
 'stock.ups',
 'stock.ups.final',
 'stock.ups.upload',
 'stock.warehouse.orderpoint.line',
 'substitute',
 'substitute.item',
 'substitute.item.mirror',
 'supplier.historical.catalogue',
 'sync.client.activate_entity',
 'sync.client.child_entity',
 'sync.client.entity',
 'sync.client.entity_group',
 'sync.client.entity_manager',
 'sync_client.instance.temp',
 'sync.client.logs',
 'sync.client.log_sale_purchase',
 'sync.client.message_received',
 'sync.client.message_rule',
 'sync.client.message_to_send',
 'sync.client.orm_extended',
 'sync.client.register_entity',
 'sync.client.rule',
 'sync.client.sync_manager',
 'sync.client.sync_server_connection',
 'sync.client.update_entity',
 'sync.client.update_received',
 'sync.client.update_to_send',
 'sync_client.upgrade',
 'sync_client.version',
 'sync.client.view_entity_id',
 'sync.order.label',
 'temp.range',
 'tender',
 'tender.cancel.wizard',
 'tender.line',
 'tender.line.cancel.wizard',
 'threshold.value.compute.all',
 'threshold.value.rules.report',
 'unconsistent.stock.report',
 'unconsistent.stock.report.line',
 'unifield.setup.configuration',
 'unifield.version',
 'uom.tools',
 'update.lines',
 'update_product',
 'user.access.configurator',
 'user.access.results',
 'user.access.results.groups.line',
 'user.access.results.menus.line',
 'user.access.results.users.line',
 'validate.account.move',
 'validate.account.move.lines',
 'validate.move.processor',
 'validate.picking.processor',
 'vat.setup',
 'warning.import.currencies',
 'warning.import.currencies.lines',
 'weekly.forecast.report',
 'wizard',
 'wizard.account.invoice',
 'wizard.account.invoice.line',
 'wizard.account.partner.balance.tree',
 'wizard.account.year.end.closing',
 'wizard.accrual.reversal',
 'wizard.accrual.validation',
 'wizard.actual.export',
 'wizard.add.cost.centers',
 'wizard.advance.line',
 'wizard.budget.criteria.export',
 'wizard.budget.import',
 'wizard.budget.import.confirm',
 'wizard.budget.import.finish',
 'wizard.budget.summary.export',
 'wizard.cash.return',
 'wizard.choose.supplier',
 'wizard.choose.supplier.line',
 'wizard.closing.cashbox',
 'wizard.common.import.line',
 'wizard.compare.rfq',
 'wizard.compare.rfq.line',
 'wizard.confirm.bank',
 'wizard.csv.report',
 'wizard.currency.revaluation',
 'wizard.delete.lines',
 'wizard.down.payment',
 'wizard.expense.report',
 'wizard.export.fmc',
 'wizard.export.po',
 'wizard.export.po.validated',
 'wizard.export.rac',
 'wizard.financing.contract.contract.warning',
 'wizard.financing.currency.export',
 'wizard.hard.posting',
 'wizard.hq.report.oca',
 'wizard.hq.report.ocg',
 'wizard.import.auto.supply.line',
 'wizard.import.cheque',
 'wizard.import.cheque.lines',
 'wizard.import.fmc',
 'wizard.import.fo.line',
 'wizard.import.in.line.simulation.screen',
 'wizard.import.in.simulation.screen',
 'wizard.import.invoice',
 'wizard.import.invoice.lines',
 'wizard.import.ir.line',
 'wizard.import.mapping',
 'wizard.import.order.cycle.line',
 'wizard.import.pick.line',
 'wizard.import.po',
 'wizard.import.po.line',
 'wizard.import.po.simulation.screen',
 'wizard.import.po.simulation.screen.line',
 'wizard.import.product.list',
 'wizard.import.rac',
 'wizard.import.stock.warehouse.orderpoint.line',
 'wizard.import.supplier.catalogue',
 'wizard.import.tender.line',
 'wizard.import.threshold.value.line',
 'wizard.incoming.xml.export',
 'wizard.interactive.report',
 'wizard.invoice.date',
 'wizard.invoice.line',
 'wizard.ir.model.menu.create',
 'wizard.ir.model.menu.create.line',
 'wizard.journal.items.corrections',
 'wizard.journal.items.corrections.lines',
 'wizard.liquidity.position',
 'wizard.local.expenses',
 'wizard.multi.charts.accounts',
 'wizard.open.empty.cashbox',
 'wizard.register.creation',
 'wizard.register.creation.lines',
 'wizard.register.import',
 'wizard.register.import.errors',
 'wizard.register.import.lines',
 'wizard.report.currency.table',
 'wizard.report.rates.table',
 'wizard.simu.import.po.line',
 'wizard.split.invoice',
 'wizard.split.invoice.lines',
 'wizard.temp.posting',
 'wizard.transfer.with.change',
 'wizard.valid.line',
 'wiz.common.import',
 'workflow',
 'workflow.activity',
 'workflow.instance',
 'workflow.transition',
 'workflow.triggers',
 'workflow.workitem']

MODELS_TO_IGNORE_DOMAIN = [
        'sync_client.%',
        'sync_server.%',
        'res.widget%',
        'base%',
        'board%',
        'audittrail%',
        'workflow%',
    ]

def __compile_models_to_ignore():
    global MODELS_TO_IGNORE_DOMAIN
    simple_patterns = []
    exact_models = []
    for model in MODELS_TO_IGNORE_DOMAIN:
        if model.find('%') >= 0:
            simple_patterns.append(model)
        else:
            exact_models.append(model)
    MODELS_TO_IGNORE_DOMAIN[:] = [('model','not in',exact_models)]
    for pattern in simple_patterns:
        MODELS_TO_IGNORE_DOMAIN.extend(['!',('model','=like',pattern)])

__compile_models_to_ignore()



def xmlid_to_sdref(xmlid):
    if not xmlid: return None
    head, sep, tail = xmlid.partition('.')
    if sep:
        assert head == 'sd', "The xmlid %s is not owned by module sd, which is wrong"% xmlid
        return tail
    else:
        return head



# TODO deprecated, should disappear
def sync_log(obj, message=None, level='debug', ids=None, data=None, traceback=False):
    if not hasattr(obj, '_logger'):
        raise Exception("No _logger specified for object %s!" % obj._name)
    output = ""
    if traceback:
        output += traceback.format_exc()
    if message is None:
        previous_frame = sys._getframe(1)
        output += "%s.%s()" % (previous_frame.f_globals['__package__'], previous_frame.f_code.co_name)
    elif isinstance(message, BaseException):
        if hasattr(message, 'value'):
            output += tools.ustr(message.value)
        elif hasattr(message, 'message'):
            output += tools.ustr(message.message)
        else:
            output += tools.ustr(message)
        if output and output[-1] != "\n": output += "\n"
    else:
        output += "%s: %s" % (level.capitalize(), message)
    if ids is not None:
        output += " in model %s, ids %s\n" % (obj._name, ", ".join(ids))
    if data is not None:
        output += " in content: %s\n" % pprint.pformat(data)
    if output and output[-1] != "\n": output += "\n"
    getattr(obj._logger, level)(output[:-1])
    return output



__re_fancy_integer_field_name = re.compile(r'^fancy_(.+)')
def fancy_integer(self, cr, uid, ids, name, arg, context=None):
    global __re_fancy_integer_field_name
    re_match = __re_fancy_integer_field_name.match(name)
    assert re_match is not None, "Invalid field detection for fancy integer display"
    target_field = re_match.group(1)
    res = self.read(cr, uid, ids, [target_field], context=context)
    return dict(zip(
            (rec['id'] for rec in res),
            (rec[target_field] or '' for rec in res),
        ))



re_xml_id = re.compile(r"(?:,|^)([^.,]+\.[^.]+)$")
def split_xml_ids_list(string):
    """
    Split xml_ids string list and return a list.

    Limitations:
    - modules must not have . nor , in its name
    - names must not have . in its name
    """
    result = []
    matches = re_xml_id.search(string)
    while matches:
        result.insert(0, matches.group(1))
        string = string[:-len(matches.group(0))]
        matches = re_xml_id.search(string)
    assert not string, "Still have a string in the list: \"%s\" remains" % string
    return result



def normalize_xmlid(string):
    """
    Try to normalize xmlid given by removing any comma.
    """
    return string.replace(',', '_')

def get_md5(obj):
    return hashlib.md5(json.dumps(obj, sort_keys=True)).hexdigest()

def check_md5(md5, data, add_info=""):
    if md5 != get_md5(data):
        raise Exception(_('Error during data transmission, checksum does not match %s') % add_info)
