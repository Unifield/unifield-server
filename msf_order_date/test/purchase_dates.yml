-
  In order to test dates in Purchase Order, I create a purchase order
  and run actions to pass into each step of the workflow and test consistency
  of dates
-
  I create a Purchase Order
-
  !record {model: purchase.order, id: po1}:
    company_id: base.main_company
    invoice_method: order
    location_id: stock.stock_location_stock
    partner_address_id: address1
    partner_id: supplier1
    pricelist_id: purchase.list0
-
    Check default value for PO
-
  !assert {model: purchase.order, id: po1}:
    - date_order: !eval time.strftime('%Y-%m-%d'), "Error on creation_date default value"
    - delivery_requested_date: False, "Error on delivery_requested_date default value"
    - delivery_confirmed_date: False, "Error on delivery_confirmed_date default value"
    - est_transport_lead_time: 0, "Error on est_transport_lead_time default value"
    - ready_to_ship_date: False, "Error on ready_to_ship_date default value"
    -
-
    I create a line for P1 in PO 1
-
  !record {model: purchase.order.line, id: po1_line1}:
    product_uom: product.product_uom_unit
    product_id: product1
    order_id: po1
    price_unit: 1.30
    product_qty: 10
    name: P1
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P2 in PO 2
-
  !record {model: purchase.order.line, id: po1_line2}:
    product_uom: product.product_uom_unit
    product_id: product2
    order_id: po1
    price_unit: 1.75
    product_qty: 20
    name: P2
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P3 in PO 3
-
  !record {model: purchase.order.line, id: po1_line3}:
    product_uom: product.product_uom_unit
    product_id: product3
    order_id: po1
    price_unit: 2.17
    product_qty: 30
    name: P3
    date_planned: !eval time.strftime('%Y-%m-%d')