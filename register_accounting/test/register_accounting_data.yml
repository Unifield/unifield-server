-
  In order to make tests, I create some elements in accounting.
-
  I create a fiscalyear
-
  !record {model: account.fiscalyear, id: fiscalyear0}:
    code: !eval "'FY%s'% (datetime.now().year+10)"
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year+10)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year+10)"
    name: !eval "'Fiscal Year %s' %(datetime.now().year+10)"
-
  I create the period 000
-
  !record {model: account.period, id: period_000}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval datetime.now().replace(month=datetime.now().month+1).strftime('%Y-%m-01')
    fiscalyear_id: fiscalyear0
    name: JAN-HHHHH-OP
    special: 1
-
  I create the period 0001 for the operational advance
-
  !record {model: account.period, id: period_0001}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval datetime.now().replace(month=datetime.now().month+1).strftime('%Y-%m-01')
    fiscalyear_id: fiscalyear0
    name: For operational advance
    special: 1
-
  I create the current period for some test
-
  !record {model: account.period, id: current_period}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval datetime.now().replace(month=datetime.now().month+1).strftime('%Y-%m-01')
    fiscalyear_id: fiscalyear0
    name: Our current period
    special: 1
-
  I create the period 00 for the write-off
-
  !record {model: account.period, id: period_00}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval datetime.now().replace(month=datetime.now().month+1).strftime('%Y-%m-01')
    fiscalyear_id: fiscalyear0
    name: JAN-HHHHH
    special: 1
-
  I create the period 01
-
  !record {model: account.period, id: period_1}:
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year)"
    date_stop: !eval "'%s-01-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Jan-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 02
-
  !record {model: account.period, id: period_2}:
    company_id: base.main_company
    date_start: !eval "'%s-02-01' %(datetime.now().year)"
    date_stop: !eval "'%s-02-28' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Feb-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 03
-
  !record {model: account.period, id: period_3}:
    company_id: base.main_company
    date_start: !eval "'%s-03-01' %(datetime.now().year)"
    date_stop: !eval "'%s-03-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Mar-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 04
-
  !record {model: account.period, id: period_4}:
    company_id: base.main_company
    date_start: !eval "'%s-04-01' %(datetime.now().year)"
    date_stop: !eval "'%s-04-30' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Apr-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 05
-
  !record {model: account.period, id: period_5}:
    company_id: base.main_company
    date_start: !eval "'%s-05-01' %(datetime.now().year)"
    date_stop: !eval "'%s-05-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'May-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 06
-
  !record {model: account.period, id: period_6}:
    company_id: base.main_company
    date_start: !eval "'%s-06-01' %(datetime.now().year)"
    date_stop: !eval "'%s-06-30' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Jun-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 07
-
  !record {model: account.period, id: period_7}:
    company_id: base.main_company
    date_start: !eval "'%s-07-01' %(datetime.now().year)"
    date_stop: !eval "'%s-07-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Jul-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 08
-
  !record {model: account.period, id: period_8}:
    company_id: base.main_company
    date_start: !eval "'%s-08-01' %(datetime.now().year)"
    date_stop: !eval "'%s-08-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Aug-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 09
-
  !record {model: account.period, id: period_9}:
    company_id: base.main_company
    date_start: !eval "'%s-09-01' %(datetime.now().year)"
    date_stop: !eval "'%s-09-30' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Sep-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 10
-
  !record {model: account.period, id: period_10}:
    company_id: base.main_company
    date_start: !eval "'%s-10-01' %(datetime.now().year)"
    date_stop: !eval "'%s-10-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Oct-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 11
-
  !record {model: account.period, id: period_11}:
    company_id: base.main_company
    date_start: !eval "'%s-11-01' %(datetime.now().year)"
    date_stop: !eval "'%s-11-30' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Nov-%s' %(datetime.now().year)"
    special: 1
-
  I create the period 12
-
  !record {model: account.period, id: period_12}:
    company_id: base.main_company
    date_start: !eval "'%s-12-01' %(datetime.now().year)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year)"
    fiscalyear_id: fiscalyear0
    name: !eval "'Dec-%s' %(datetime.now().year)"
    special: 1
-
  I create a Receivable Account Type.
-
  !record {model: account.account.type, id: account_account_type_receivable0}:
    close_method: balance
    code: receivable
    name: Receivable
    sign: 1
-
  I create an Expense Account Type.
-
  !record {model: account.account.type, id: account_account_type_expense0}:
    close_method: unreconciled
    code: expense
    name: Expense
    sign: 1
-
  I create a transfer account type
-
  !record {model: account.account.type, id: account_account_type_transfer_0}:
    close_method: balance
    code: transfer
    name: Transfer
    sign: 1
    report_type: asset
-
  I create a cash account type
-
  !record {model: account.account.type, id: account_account_type_cash_0}:
    close_method: balance
    code: cash
    name: Cash
    sign: 1
    report_type: asset
-
  I create a transfer account
-
  !record {model: account.account, id: account_account_transfer_0}:
    name: Internal Transfer
    code: '5815-bank-and-cash-transfer-test'
    type: liquidity
    user_type: account_account_type_transfer_0
    company_id: base.main_company
    currency_mode: current
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create Supplier 401 Payable Account.
-
  !record {model: account.account, id: account_account_payable_supplier0}:
    code: '401-supplier-test'
    company_id: base.main_company
    currency_mode: current
    name: Supplier Payable Account
    type: payable
    user_type: account_account_type_receivable0
    reconcile: 1
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a 6101 Expense Account.
-
  !record {model: account.account, id: account_account_expense0}:
    code: '6101-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense Account
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X2110 Expense Account.
-
  !record {model: account.account, id: account_account_expense1}:
    code: 'X2110-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense (test)
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create Cash Advance 4204 Account.
-
  !record {model: account.account, id: account_account_advance0}:
    code: '4204-cash-advance-test'
    company_id: base.main_company
    currency_mode: current
    name: Cash Advance Account
    type: other
    user_type: account_account_type_expense0
    reconcile: 1
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11002 Receivable Account.
-
  !record {model: account.account, id: account_account_receivable0}:
    code: 'X11002-test'
    company_id: base.main_company
    currency_mode: current
    name: Debtors (test)
    type: receivable
    reconcile: 1
    user_type : account_account_type_receivable0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11003 Cash Account.
-
  !record {model: account.account, id: account_account_cash0}:
    code: 'X11003-test'
    company_id: base.main_company
    currency_mode: current
    name: Cash (test)
    type: liquidity
    reconcile: False
    user_type : account_account_type_cash_0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11004 Bank Account.
-
  !record {model: account.account, id: account_account_bank0}:
    code: 'X11004-test'
    company_id: base.main_company
    currency_mode: current
    name: Bank (test)
    type: liquidity
    reconcile: False
    user_type : account_account_type_cash_0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11004-US Bank USD Account.
-
  !record {model: account.account, id: account_account_bank1}:
    code: 'X11004-usd-test'
    company_id: base.main_company
    currency_mode: current
    name: Bank in USD (test)
    type: liquidity
    reconcile: False
    user_type : account_account_type_cash_0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11005 Cheque Account
-
  !record {model: account.account, id: account_account_cheque0}:
    code: 'X11005-test'
    company_id: base.main_company
    currency_mode: current
    name: Cheque (test)
    type: liquidity
    reconcile: False
    user_type : account_account_type_cash_0
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a X11005-US Cheque USD Account
-
  !record {model: account.account, id: account_account_cheque1}:
    code: 'X11005-usd-test'
    company_id: base.main_company
    currency_mode: current
    name: Cheque in USD (test)
    type: liquidity
    reconcile: False
    user_type : account_account_type_cash_0
    type_for_register: 'transfer'
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create a Journal View with some columns
-
  !record {model: account.journal.view, id: account_journal_view0}:
    name: Bank/Cash/Cheque Journal (Multi-Currency) View
    columns_id:
        - name: Date
          field: date
          required: 1
          sequence: 3
        - name: Journal Entry
          field: move_id
          required: False
          sequence: 1
        - name: Name
          field: name
          required: 1
          sequence: 7
        - name: Statement
          field: statement_id
          sequence: 7
        - name: Partner
          field: partner_id
          sequence: 5
        - name: Account
          field: account_id
          required: 1
          sequence: 6
        - name: Currency Amt.
          field: amount_currency
          sequence: 9
        - name: Currency
          field: currency_id
          sequence: 10
        - name: Debit
          field: debit
          sequence: 11
        - name: Credit
          field: credit
          sequence: 12
        - name: Ref
          field: ref
          sequence: 2
        - name: State
          field: state
          sequence: 19
        - name: Reconcile
          field: reconcile_id
          sequence: 20
-
  I create a Cash Journal
-
  !record {model: account.journal, id: account_journal_cash_0}:
    code: csh
    company_id: base.main_company
    name: Cash Journal (test)
    type: cash
    view_id: account_journal_view0
    default_debit_account_id: account_account_cash0
    default_credit_account_id: account_account_cash0
    allow_date: 0
-
  I create a Bank Journal
-
  !record {model: account.journal, id: account_journal_bank_0}:
    code: bnk
    company_id: base.main_company
    name: Bank Journal (test)
    type: bank
    view_id: account_journal_view0
    default_debit_account_id: account_account_bank0
    default_credit_account_id: account_account_bank0
    allow_date: 0
-
  I create a Bank Journal in USD
-
  !record {model: account.journal, id: account_journal_bank_usd}:
    code: bnk_usd
    company_id: base.main_company
    name: Bank Journal in USD (test)
    type: bank
    view_id: account_journal_view0
    default_debit_account_id: account_account_bank1
    default_credit_account_id: account_account_bank1
    allow_date: 0
-
  I create a Cheque Journal
-
  !record {model: account.journal, id: account_journal_cheque_0}:
    code: chq
    company_id: base.main_company
    name: Cheque Journal (test)
    type: cheque
    view_id: account_journal_view0
    default_debit_account_id: account_account_cheque0
    default_credit_account_id: account_account_cheque0
    allow_date: 0
-
  I create a Cheque Journal in USD
-
  !record {model: account.journal, id: account_journal_cheque_usd}:
    code: chq_usd
    company_id: base.main_company
    name: Cheque Journal in USD (test)
    type: cheque
    view_id: account_journal_view0
    default_debit_account_id: account_account_cheque1
    default_credit_account_id: account_account_cheque1
    allow_date: 0
-
  I create an Expenses Journal.
-
  !record {model: account.journal, id: account_journal_expenses_0}:
    code: expense
    company_id: base.main_company
    name: Expenses Journal (test)
    type: purchase
    view_id: account_journal_view0
    default_debit_account_id: account_account_expense1
    default_credit_account_id: account_account_expense1
    allow_date: 0
-
  I create a Partner Category named "Customers".
-
  !record {model: res.partner.category, id: res_partner_category_customer_0}:
    name: Customer
-
  I create a Partner Category named "Supplier".
-
  !record {model: res.partner.category, id: res_partner_category_supplier_0}:
    name: Supplier
-
  I create another Partner Category which are under "Supplier".
-
  !record {model: res.partner.category, id: res_partner_category_miscellaneous_supplier_0}:
    name: Miscellaneous Supplier
    parent_id: res_partner_category_supplier_0
-
  I create a Supplier named "Wood Supplier".
-
  !record {model: res.partner, id: res_partner_supplier_wood_0}:
    name: "Wood Supplier"
    category_id: 
      - res_partner_category_miscellaneous_supplier_0
    supplier: 1
-
  I create a Partner named "John Doe"
-
  !record {model: res.partner, id: res_partner_john_doe}:
    name: John Doe
    category_id: 
      - res_partner_category_customer_0
-
  I create an address
-
  !record {model: res.partner.address, id: res_partner_address_tempo}:
    name: Maurice MORETTI
    street: 9, rue du Parc
    zip: 67205
    city: Oberhausbergen
    phone: +33 3 88 56 82 10
    email: info@tempo-consulting.fr
-
  I create a Cheque USD Register
-
  !record {model: account.bank.statement, id: cheque_register_0}:
    date: !eval time.strftime('%Y-%m-%d')
    journal_id: account_journal_cheque_usd
    name: REG-CHK-USD-1
    period_id: current_period
    user_id: base.user_root
-
  I click on 'Open Cheque' button to open the Cheque Register
-
  !python {model: account.bank.statement}: |
    self.button_open_cheque(cr, uid, [ref("cheque_register_0")], {"lang": "en_US", "tz": False, "active_model": "account.bank.statement", \
        "active_ids": [ref("cheque_register_0")], "active_id": ref("cheque_register_0"), })
-
  I create a Bank USD Register
-
  !record {model: account.bank.statement, id: bank_register_0}:
    date: !eval time.strftime('%Y-%m-%d')
    journal_id: account_journal_bank_usd
    name: REG-BNK-USD-1
    period_id: current_period
    user_id: base.user_root
-
  I click on 'Open Bank' button to open the Bank Register
-
  !python {model: account.bank.statement}: |
    self.button_open_bank(cr, uid, [ref("bank_register_0")], {"lang": "en_US", "tz": False, "active_model": "account.bank.statement", \
        "active_ids": [ref("bank_register_0")], "active_id": ref("bank_register_0"), })
