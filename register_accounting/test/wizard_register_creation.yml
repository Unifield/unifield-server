-
  In order to test that the register creation wizard works, I create a fiscalyear, some periods, open them and create a cheque register
-
  I create a fiscalyear
-
  !record {model: account.fiscalyear, id: fiscalyear1}:
    code: !eval "'FY%s'% (datetime.now().year+5)"
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year+5)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year+5)"
    name: !eval "'Fiscal Year %s' %(datetime.now().year+5)"
-
  I create the first period
-
  !record {model: account.period, id: register_creation_wiz_period_01}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval (DateTime.now()+DateTime.RelativeDateTime(day=-1)).strftime('%Y-%m-%d')
    fiscalyear_id: fiscalyear1
    name: PER-01
    special: 1
-
  I create the second period
-
  !record {model: account.period, id: register_creation_wiz_period_02}:
    company_id: base.main_company
    date_start: !eval (DateTime.now()+DateTime.RelativeDateTime(day=1,months=1)).strftime('%Y-%m-%d')
    date_stop: !eval (DateTime.now()+DateTime.RelativeDateTime(day=-1,months=1)).strftime('%Y-%m-%d')
    fiscalyear_id: fiscalyear1
    name: PER-02
    special: 1
-
  I open all periods
-
  !python {model: account.period}: |
      self.action_set_state(cr, uid, [ref('register_creation_wiz_period_01')], {'state': 'draft'})
      self.action_set_state(cr, uid, [ref('register_creation_wiz_period_02')], {'state': 'draft'})
-
  I create a Cheque Journal in EUR
-
  !record {model: account.journal, id: register_creation_wiz_cheque_journal_0}:
    code: chqeur
    company_id: base.main_company
    name: Cheque Journal (for register creation test)
    type: cheque
    view_id: account_journal_view0
    default_debit_account_id: account_account_cheque0
    default_credit_account_id: account_account_cheque0
    currency: base.EUR
    allow_date: 0
-
  I create a cheque register in first period in EUR
-
  !record {model: account.bank.statement, id: cheque_register_for_register_creation}:
    date: !eval time.strftime('%Y-%m-04')
    journal_id: register_creation_wiz_cheque_journal_0
    name: cheque register created for register creation wizard
    period_id: register_creation_wiz_period_01
    user_id: base.user_root
    balance_start: 637.0
-
  I create a wizard "Register Creation" with the second period
-
  !record {model: wizard.register.creation, id: wiz_register_creation0}:
    period_id: register_creation_wiz_period_02
-
  I confirm the period with the "Confirm Period" button
-
  !python {model: wizard.register.creation}: |
      self.button_confirm_period(cr, uid, [ref('wiz_register_creation0')], {"lang": "en_US", "tz": False})
-
  I press the "Create Registers" button and verify that a cheque register is created for the second period on the cheque journal
-
  !python {model: wizard.register.creation}: |
      res = self.button_create_registers(cr, uid, [ref('wiz_register_creation0')], {"lang": "en_US", "tz": False})
      
      st_obj = self.pool.get('account.bank.statement')
      st_ids = st_obj.search(cr, uid, [('period_id', '=', ref('register_creation_wiz_period_02')), ('journal_id', '=', ref('register_creation_wiz_cheque_journal_0'))])
      assert len(st_ids) == 1, "A problem occured for register creation. You should be have ONE register created. You have: %s" % st_ids
